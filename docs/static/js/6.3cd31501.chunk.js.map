{"version":3,"sources":["shared/components/form/error.tsx","shared/components/form/option.tsx","shared/components/table/PbTable.tsx","shared/components/table/PbHead.tsx","shared/components/table/PbRow.tsx","shared/components/table/PbCell.tsx","shared/components/table/PbBody.tsx","shared/components/emptyDataContainer/emptyDataContainer.tsx","shared/components/table/tableEmptyContainer.tsx","shared/components/table/tableSpinner.tsx","shared/components/table/AdvancedPbHead.tsx","shared/components/table/index.ts","shared/components/form/inputTypes.tsx","shared/components/header/breadcrumbs.tsx","shared/components/header/header.tsx","features/quotation/component/vehicleList.tsx","features/quotation/component/vehicleDetailForm.tsx","features/quotation/component/quotationForm.tsx","features/quotation/component/quotationList.tsx","features/quotation/component/quotationDetailModal.tsx","features/quotation/container/quotation.tsx"],"names":["react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","FieldErrorMessage","props","a","createElement","className","children","Option","value","name","TableTitle","react","join","data-testid","title","PbTable","PbHead","react_default","concat","dataTestId","PbRow","PbCell","onChangeInput","e","onInputChange","target","header","onClick","colSpan","rowSpan","style","input","inputLabel","dropDownOptions","placeholder","inputValue","onChange","disabled","map","option","form_option","Object","assign","key","PbBody","EmptyDataContainer","text","TableEmptyContainer","table_PbRow","table_PbCell","emptyDataContainer_emptyDataContainer","TableSpinner","spinner","React","Component","d","__webpack_exports__","PbTable_TableTitle","table_PbTable","table_PbHead","table_PbBody","tableEmptyContainer","tableSpinner","Input","InputDatePicker","date_fns_locale_en_GB__WEBPACK_IMPORTED_MODULE_1__","react_datepicker__WEBPACK_IMPORTED_MODULE_2__","react_datepicker__WEBPACK_IMPORTED_MODULE_2___default","formik__WEBPACK_IMPORTED_MODULE_3__","_error__WEBPACK_IMPORTED_MODULE_4__","_option__WEBPACK_IMPORTED_MODULE_5__","RenderInput","type","Fragment","showLabels","config","label","field","getValue","id","readOnly","autoComplete","component","checked","setFieldValue","htmlFor","hideErrorMessage","geCheckboxOptions","isChecked","toString","includes","evt","getCheckboxValue","placeHolder","otherOptions","isMultiSelect","slice","call","selectedOptions","multiple","geDropDownOptions","render","_ref","registerLocale","enGB","_ref2","RenderDatePicker","asterisk","todayButton","inline","locale","placeholderText","selected","Date","showMonthDropdown","showYearDropdown","showTimeSelect","minDate","maxDate","timeFormat","timeIntervals","dateFormat","dropdownMode","fixedHeight","index","indexOf","push","splice","checkboxOptions","undefined","Breadcrumbs","data","obj","Link","to","link","linkText","href","withRouter","breadcrumbs","provideBackBtn","form_button","history","goBack","btnType","VehicleList","vehicleList","vehicleDetail","make","model","regNo","vehicleType","category","coverType","windScreen","cc","manufactured","weight","sumInsured","owner","DropDownOptions","formValidation","Yup","shape","required","errorMessages","strict","VehicleDetailForm","isModalOpen","closeModal","_useState","useState","_useState2","slicedToArray","actionType","changeActionType","modal","show","modalTitle","handleClose","formik_esm","initialValues","onSubmit","resetForm","addNewVehicle","submitVehicleDetail","validationSchema","handleSubmit","loading","inputTypes","VEHICLESELECT","vehicle","VEHICLETEXTBOX","length","component_vehicleList","status","referenceNumber","companyName","contactPerson","quoteType","policyType","quoteDate","acceptedDate","proposedInceptionDate","policyStartDate","paymentMethod","proposedEndDate","brokerInformation","brokgType","brokerage","SAPno","insYear","govLevy","notes","QuotationForm","handleModalState","_useState3","_useState4","isError","handleErrorState","handleVehicleList","params","_ref3","errors","handleChange","values","DATEPICKERS","inputItem","date","handelReset","vehicleDetailForm","oldVehicleList","QuotationDetailList","table","width","quotationDetailList","company","abbr","quotationDetailModal","quotationDetail","PolicyDetail","state","addQuotation","selectedQuotation","_this","setState","handleCloseModel","_this2","this","_this$state","firstLevelBreadcrumbs","quotationForm","quotationList","component_quotationDetailModal"],"mappings":"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","file":"static/js/6.3cd31501.chunk.js","sourcesContent":["import React from 'react';\n// import { Translate } from '../translate';\n\n/**\n * common field error message component\n * @param props\n */\nconst FieldErrorMessage: React.FC<any> = (props) => (\n\t<p className='error'>\n\t\t{/* <Translate text={props.children} /> */}\n\t\t{props.children}\n\t</p>\n);\n\nexport default FieldErrorMessage;\n","import React from 'react';\n\ninterface Props {\n\tname: string;\n\tvalue: string | number;\n}\nconst Option: React.FC<Props> = (props) => {\n\treturn (\n\t\t<option value={props.value}>\n\t\t\t{props.name}\n\t\t</option>\n\t)\n}\nexport default Option;\n","import * as React from 'react';\n\ninterface Props {\n\tclassName?: string;\n\theader?: JSX.Element;\n\ttitle?: string;\n\t// chindren contains 2 elements\n\tchildren: JSX.Element[];\n}\n\nconst PbTable: React.FC<Props> = (props) => {\n\treturn (\n\t\t<div className='table-responsive'>\n\t\t\t<table className={['table table-bordered table-hover dataTables-example dataTable', props.className].join(' ')}>\n\t\t\t\t{/** first children must be Table Head */}\n\t\t\t\t{props.children[0]}\n\t\t\t\t{/** second children must be Table Body */}\n\t\t\t\t{props.children[1]}\n\t\t\t</table>\n\t\t</div>\n\t);\n}\n\ninterface TableTitleProps extends React.DetailedHTMLProps<React.HTMLAttributes<HTMLDivElement>, HTMLDivElement> {\n\ttitle: string;\n}\n\nconst TableTitle = (props: TableTitleProps) => (\n\t<div className={[props.className, 'ibox-title'].join(' ')}>\n\t\t<h5 data-testid='module-title'>{props.title}</h5>\n\t\t<div className='justify-content-space-between'>\n\t\t\t{props.children}\n\t\t</div>\n\t</div>\n)\n\nexport default PbTable;\n\nexport { TableTitle }\n","import React from 'react'\n\nconst PbHead: React.FC<{\n\tdataTestId?: string\n}> = (props) => {\n\treturn (\n\t\t<thead data-testid={`${props.dataTestId || 'list-column-header'}`}>\n\t\t\t{props.children}\n\t\t</thead>\n\t)\n}\n\nexport default PbHead;\n","import React from 'react'\n\ninterface Props extends React.DetailedHTMLProps<React.HTMLAttributes<HTMLTableRowElement>, HTMLTableRowElement> {\n\t'data-testid'?: string;\n}\n\nconst PbRow: React.FC<Props> = (props) => {\n\treturn (\n\t\t<tr {...props}>\n\t\t\t{props.children}\n\t\t</tr>\n\t)\n}\n\nexport default PbRow\n","import React from 'react';\nimport Option from '../form/option';\ninterface Props extends React.DetailedHTMLProps<React.TdHTMLAttributes<HTMLTableDataCellElement>, HTMLTableDataCellElement>,\n\tReact.DetailedHTMLProps<React.ThHTMLAttributes<HTMLTableHeaderCellElement>, HTMLTableHeaderCellElement> {\n\n\theader?: Boolean;\n\tonClick?: React.MouseEventHandler<any>;\n\tinput?: Boolean;\n\tdropDownOptions?: Array<{\n\t\tname: string;\n\t\tvalue: string;\n\t}>;\n\tinputValue?: string;\n\tplaceholder?: string;\n\tinputLabel?: string;\n\tdisabled?: boolean;\n\tonInputChange?: (text: string) => void;\n}\n\nconst PbCell: React.FC<Props> = props => {\n\tlet html: JSX.Element;\n\tconst onChangeInput = (e: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>) => {\n\t\tprops.onInputChange && props.onInputChange(e.target.value);\n\t};\n\tif (props.header) {\n\t\thtml = (\n\t\t\t<th\n\t\t\t\tclassName={`text-capitalize cursor-pointer ${props.className || ''}`}\n\t\t\t\tonClick={props.onClick}\n\t\t\t\tcolSpan={props.colSpan}\n\t\t\t\trowSpan={props.rowSpan}\n\t\t\t\tstyle={props.style}\n\t\t\t>\n\t\t\t\t{typeof props.children === 'string' ? props.children : props.children}\n\t\t\t</th>\n\t\t);\n\t} else if (props.input) {\n\t\thtml = (\n\t\t\t<td\n\t\t\t\tclassName={props.className}\n\t\t\t\trowSpan={props.rowSpan}\n\t\t\t\tcolSpan={props.colSpan}\n\t\t\t\tstyle={props.style}\n\t\t\t>\n\t\t\t\t{props.inputLabel ? <label className='mb-3'>{props.inputLabel}</label> : ''}\n\t\t\t\t{props.dropDownOptions ?\n\t\t\t\t\t<select\n\t\t\t\t\t\tplaceholder={props.placeholder || ''}\n\t\t\t\t\t\tclassName='form-control'\n\t\t\t\t\t\tvalue={props.inputValue}\n\t\t\t\t\t\tonChange={onChangeInput}\n\t\t\t\t\t\tdisabled={props.disabled}\n\t\t\t\t\t>\n\t\t\t\t\t\t{props.dropDownOptions.map(option => <Option key={option.name}  {...option} />)}\n\t\t\t\t\t</select>\n\t\t\t\t\t:\n\t\t\t\t\t<input\n\t\t\t\t\t\tvalue={props.inputValue || ''}\n\t\t\t\t\t\tonChange={onChangeInput}\n\t\t\t\t\t\tclassName='form-control'\n\t\t\t\t\t\tplaceholder={props.placeholder || ''}\n\t\t\t\t\t/>\n\t\t\t\t}\n\t\t\t</td>\n\t\t);\n\t} else {\n\t\thtml = (\n\t\t\t<td\n\t\t\t\tclassName={[props.className, 'Cell'].join(' ')}\n\t\t\t\tcolSpan={props.colSpan}\n\t\t\t\trowSpan={props.rowSpan}\n\t\t\t\tstyle={props.style}\n\t\t\t>\n\t\t\t\t{props.children}\n\t\t\t</td>\n\t\t);\n\t}\n\n\treturn html;\n};\nexport default PbCell;\n","import React from 'react'\n\nconst PbBody: React.FC<{\n\t'data-testid'?: string;\n}> = (props) => {\n\treturn (\n\t\t<tbody data-testid={`${props[\"data-testid\"] || 'list-rows'}`}>\n\t\t\t{props.children}\n\t\t</tbody>\n\t)\n}\n\nexport default PbBody;\n","import React from 'react';\nimport './emptyDataContainer.css';\n\ninterface EmptyDataContainerProps {\n\ttext?: string\n}\n\nconst EmptyDataContainer: React.FC<EmptyDataContainerProps> = (props) => {\n\treturn (\n\t\t<div className='empty-data-wrapper'>\n\t\t\t{props.text || 'No data found'}\n\t\t</div>\n\t)\n}\n\nexport default EmptyDataContainer;\n","import React from 'react';\nimport EmptyDataContainer from '../emptyDataContainer/emptyDataContainer';\nimport PbRow from './PbRow';\nimport PbCell from './PbCell';\n\ninterface Props extends React.DetailedHTMLProps<React.HTMLAttributes<HTMLTableRowElement>, HTMLTableRowElement> {\n\ttext?: string;\n\tcolSpan: number;\n}\n\nconst TableEmptyContainer: React.FC<Props> = (props) => (\n\t<PbRow>\n\t\t<PbCell colSpan={props.colSpan}>\n\t\t\t<EmptyDataContainer\n\t\t\t\ttext={props.text} />\n\t\t</PbCell>\n\t</PbRow>\n)\n\nexport default TableEmptyContainer;\n","import React from 'react';\n\nimport Spinner from '../spinner/spinner';\nimport PbRow from './PbRow';\nimport PbCell from './PbCell';\n\nconst TableSpinner: React.FC<{ colSpan: number }> = (props) => (\n\t<PbRow>\n\t\t<PbCell colSpan={props.colSpan}>\n\t\t\t<Spinner />\n\t\t</PbCell>\n\t</PbRow>\n)\n\nexport default TableSpinner;\n","import React from 'react'\nimport PbCell from './PbCell';\n\ninterface Column {\n\tsort?: boolean,\n\tname: string\n}\n\ninterface Props extends React.DetailedHTMLProps<React.TdHTMLAttributes<HTMLTableDataCellElement>, HTMLTableDataCellElement> {\n\tcolumn: Column;\n\tonSort?: (column: string) => void;\n\torderBy: string | null;\n\torder: string | null;\n}\n\nclass AdvancedPbHead extends React.Component<Props> {\n\trender() {\n\t\treturn (\n\t\t\t<PbCell\n\t\t\t\tclassName={[this.props.className, this.getCellClasses(this.props.column)].join(' ')}\n\t\t\t\tonClick={() => this.onClickCell(this.props.column)}\n\t\t\t\theader={true}\n\t\t\t>\n\t\t\t\t{this.props.children}\n\t\t\t</PbCell>\n\t\t)\n\t}\n\n\tonClickCell = (column: Column) => {\n\t\tif (!column.sort) {\n\t\t\treturn;\n\t\t}\n\t\tthis.props.onSort && this.props.onSort(column.name);\n\t}\n\n\tgetCellClasses = (column: Column): string => {\n\t\tif (!column.sort) {\n\t\t\treturn '';\n\t\t}\n\t\tif (column.sort && this.props.orderBy === column.name) {\n\t\t\treturn this.props.order === 'asc' ? 'sorting_asc' : 'sorting_desc'\n\t\t} else {\n\t\t\treturn 'sorting'\n\t\t}\n\t}\n}\n\nexport default AdvancedPbHead;\n","import PbTable, { TableTitle } from './PbTable';\nimport PbHead from './PbHead';\nimport PbRow from './PbRow';\nimport PbCell from './PbCell';\nimport PbBody from './PbBody';\nimport TablePagination from './pagination';\nimport TableEmptyContainer from './tableEmptyContainer';\nimport TableSpinner from './tableSpinner';\nimport AdvancedPbHead from './AdvancedPbHead';\n\nexport {\n\tTableTitle,\n\tPbTable,\n\tPbHead,\n\tPbRow,\n\tPbCell,\n\tPbBody,\n\tTablePagination,\n\tTableEmptyContainer,\n\tTableSpinner,\n\tAdvancedPbHead\n};\n","import React, { ChangeEventHandler } from 'react';\nimport enGB from 'date-fns/locale/en-GB';\nimport DatePicker, { registerLocale } from 'react-datepicker';\nimport { Field, ErrorMessage, FieldProps, FormikValues } from 'formik';\nimport FieldErrorMessage from './error';\nimport Option from './option';\nimport 'react-datepicker/dist/react-datepicker.css';\nexport interface DropDownAndCheckboxOptions {\n\tname: string;\n\tvalue: string | number;\n}\nexport interface FieldConfig {\n\ttype: 'text' | 'textarea' | 'email' | 'password' | 'number' | 'dropdown' | 'checkbox' | 'dropdown' | 'radio';\n\tlabel: string;\n\tname: string;\n\tclassName?: string;\n\tplaceHolder?: string;\n\totherOptions?: {\n\t\tdropDownOptions?: DropDownAndCheckboxOptions[];\n\t\tcheckboxOptions?: DropDownAndCheckboxOptions[];\n\t\tisMultiSelect?: boolean;\n\t};\n\thideErrorMessage?: boolean;\n}\ninterface TextFieldProps {\n\tname: string;\n\tplaceholder: string;\n\tconfig: FieldConfig;\n\tvalue?: any;\n\tsetFieldValue: (field: string, value: any) => void;\n\treadOnly?: boolean;\n\ttype?: 'text' | 'textarea' | 'email' | 'password' | 'number' | 'checkbox' | 'dropdown' | 'radio';\n\tclassName?: string;\n\tautoComplete?: string;\n\tshowLabels?: boolean;\n\tonChange?: ChangeEventHandler<any>;\n}\n\nconst RenderInput: React.FC<TextFieldProps & { field: any }> = props => {\n\tswitch (props.type) {\n\t\t// render text input in case of text, textarea, email, password and number\n\t\tcase 'textarea':\n\t\t\treturn (\n\t\t\t\t<>\n\t\t\t\t\t{props.showLabels && props.config.label &&\n\t\t\t\t\t\t<label className='text-capitalize input-label-wrapper'>\n\t\t\t\t\t\t\t{props.config.label}\n\t\t\t\t\t\t</label>}\n\t\t\t\t\t<textarea\n\t\t\t\t\t\t{...props.field}\n\t\t\t\t\t\tvalue={getValue(props.field.value)}\n\t\t\t\t\t\tid={props.name}\n\t\t\t\t\t\tclassName={`${props.className || ''} form-control`}\n\t\t\t\t\t\tplaceholder={props.placeholder}\n\t\t\t\t\t\treadOnly={props.readOnly}\n\t\t\t\t\t\tautoComplete={`${props.autoComplete || 'off'}`}\n\t\t\t\t\t/>\n\t\t\t\t\t<ErrorMessage name={props.config.name} component={FieldErrorMessage} />\n\t\t\t\t</>\n\t\t\t);\n\t\tcase 'text':\n\t\tcase 'email':\n\t\tcase 'password':\n\t\tcase 'number':\n\t\t\treturn (\n\t\t\t\t<>\n\t\t\t\t\t{props.showLabels && props.config.label &&\n\t\t\t\t\t\t<label className='text-capitalize input-label-wrapper'>\n\t\t\t\t\t\t\t{props.config.label}\n\t\t\t\t\t\t</label>}\n\t\t\t\t\t<input\n\t\t\t\t\t\t{...props.field}\n\t\t\t\t\t\tvalue={getValue(props.field.value)}\n\t\t\t\t\t\tid={props.name}\n\t\t\t\t\t\ttype={props.type}\n\t\t\t\t\t\tclassName={`${props.className || ''} form-control`}\n\t\t\t\t\t\tplaceholder={props.placeholder}\n\t\t\t\t\t\treadOnly={props.readOnly}\n\t\t\t\t\t\tautoComplete={`${props.autoComplete || 'off'}`}\n\t\t\t\t\t/>\n\t\t\t\t\t<ErrorMessage name={props.config.name} component={FieldErrorMessage} />\n\t\t\t\t</>\n\t\t\t);\n\t\tcase 'radio':\n\t\t\treturn (\n\t\t\t\t<div className='radio-input-wrapper'>\n\t\t\t\t\t<input\n\t\t\t\t\t\t{...props.field}\n\t\t\t\t\t\ttype='radio'\n\t\t\t\t\t\tid={props.name + props.value}\n\t\t\t\t\t\tname={props.name}\n\t\t\t\t\t\tchecked={props.field.value === props.value}\n\t\t\t\t\t\tvalue={props.value}\n\t\t\t\t\t\tonChange={() => props.setFieldValue(props.name, props.value)}\n\t\t\t\t\t/>\n\t\t\t\t\t<label\n\t\t\t\t\t\tclassName={`pointer text--secondary font--medium ${props.field.value === props.value ? 'checked' : ''}\n\t\t\t\t\t\t${props.className ? props.className : ''}`}\n\t\t\t\t\t\thtmlFor={props.name + props.value}\n\t\t\t\t\t>\n\t\t\t\t\t\t{props.children}\n\t\t\t\t\t</label>\n\t\t\t\t\t{!props.config.hideErrorMessage && <ErrorMessage name={props.config.name} component={FieldErrorMessage} />}\n\t\t\t\t</div>\n\t\t\t);\n\t\tcase 'checkbox':\n\t\t\treturn (\n\t\t\t\t<div className='form-group d-flex align-items-baseline'>\n\t\t\t\t\t{props.config.label &&\n\t\t\t\t\t\t<label className='text-capitalize col-xs-4 col-sm-2 control-label'>\n\t\t\t\t\t\t\t{props.config.label}\n\t\t\t\t\t\t</label>}\n\t\t\t\t\t<div className='checkbox-wrapper col-xs-8 col-sm-10'>\n\t\t\t\t\t\t{geCheckboxOptions(props.config).map(option => {\n\t\t\t\t\t\t\tconst setCheckboxvalue: ChangeEventHandler<HTMLInputElement> = evt => {\n\t\t\t\t\t\t\t\tprops.setFieldValue(props.config.name, getCheckboxValue(props.field, evt));\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tconst isChecked = (props.field.value || []).map((key: any) => (key || '').toString()).includes(option.value.toString());\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<div className='checkbox-content' key={option.value}>\n\t\t\t\t\t\t\t\t\t<label className='text-capitalize checkbox-label'>\n\t\t\t\t\t\t\t\t\t\t{option.name}\n\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\tplaceholder={option.name}\n\t\t\t\t\t\t\t\t\t\t\tchecked={isChecked}\n\t\t\t\t\t\t\t\t\t\t\tonChange={setCheckboxvalue}\n\t\t\t\t\t\t\t\t\t\t\ttype='checkbox'\n\t\t\t\t\t\t\t\t\t\t\tname={option.name}\n\t\t\t\t\t\t\t\t\t\t\tvalue={option.value} />\n\t\t\t\t\t\t\t\t\t\t<span className='checkmark' />\n\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t})}\n\t\t\t\t\t</div>\n\t\t\t\t\t<ErrorMessage name={props.config.name} component={FieldErrorMessage} />\n\t\t\t\t</div>\n\t\t\t);\n\n\t\t// render dorpdown when dropdown type is provided\n\t\tcase 'dropdown':\n\t\t\tconst setDropdownValue: ChangeEventHandler<any> = evt => {\n\t\t\t\tif ((props.config.otherOptions || {}).isMultiSelect) {\n\t\t\t\t\tprops.setFieldValue(props.config.name, [].slice.call(evt.target.selectedOptions).map((option: any) => option.value));\n\t\t\t\t} else {\n\t\t\t\t\tprops.setFieldValue(props.config.name, evt.target.value);\n\t\t\t\t}\n\t\t\t\tif (props.onChange) {\n\t\t\t\t\tprops.onChange(evt);\n\t\t\t\t}\n\t\t\t};\n\t\t\treturn (\n\t\t\t\t<div className='row'>\n\t\t\t\t\t{props.config.label &&\n\t\t\t\t\t\t<label className='text-capitalize col-sm-12 control-label'>\n\t\t\t\t\t\t\t{props.config.label}\n\t\t\t\t\t\t</label>}\n\t\t\t\t\t<div className='col-sm-12'>\n\t\t\t\t\t\t<select\n\t\t\t\t\t\t\tplaceholder={props.config.placeHolder || props.config.label}\n\t\t\t\t\t\t\tvalue={props.field.value}\n\t\t\t\t\t\t\tonChange={setDropdownValue}\n\t\t\t\t\t\t\tname={props.config.name}\n\t\t\t\t\t\t\tclassName='form-control'\n\t\t\t\t\t\t\tmultiple={(props.config.otherOptions || {}).isMultiSelect}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<option value=''>---SELECT---</option>\n\t\t\t\t\t\t\t{geDropDownOptions(props.config).map(option => (\n\t\t\t\t\t\t\t\t<Option key={option.name} name={option.name} value={option.value} />\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</select>\n\t\t\t\t\t\t<ErrorMessage name={props.config.name} component={FieldErrorMessage} />\n\t\t\t\t\t</div>\n\t\t\t\t</div >\n\t\t\t);\n\t\tdefault:\n\t\t\treturn <></>;\n\t}\n};\n\n/**\n * common input field component\n * renders input based on the field configuration\n * @param props { field, form: { touched, errors }, ...props }\n */\nconst Input: React.FC<TextFieldProps> = props => {\n\tconst fieldRender = ({ field }: { field: any }) => {\n\t\treturn <RenderInput {...props} field={field} />;\n\t};\n\n\treturn (\n\t\t<Field\n\t\t\tname={props.name}\n\t\t\trender={fieldRender}\n\t\t/>\n\t);\n};\n\nconst InputDatePicker: React.FC<FieldProps<FormikValues> & any> = props => {\n\tregisterLocale('en-gb', enGB);\n\tconst fieldRender = ({ field }: { field: any }) => {\n\t\treturn <RenderDatePicker {...props} field={field} />;\n\t};\n\treturn (\n\t\t<Field\n\t\t\tname={props.name}\n\t\t\trender={fieldRender}\n\t\t/>\n\t);\n};\n\nconst RenderDatePicker = (props: any) => (\n\t<>\n\t\t{props.label &&\n\t\t\t<label className='text-capitalize input-label-wrapper'>\n\t\t\t\t{props.label}\n\t\t\t\t{props.asterisk && <span className='required'>*</span>}\n\t\t\t</label>}\n\t\t<DatePicker\n\t\t\t{...props.field}\n\t\t\ttodayButton={'Today'}\n\t\t\tinline={props.inline}\n\t\t\tclassName='form-control custom-datepicker'\n\t\t\tautoComplete='off'\n\t\t\tlocale='en-gb'\n\t\t\tplaceholderText={props.placeHolder || ''}\n\t\t\tselected={props.field.value && new Date(props.field.value)}\n\t\t\tonChange={props.onChange}\n\t\t\tshowMonthDropdown\n\t\t\tshowYearDropdown\n\t\t\tshowTimeSelect={props.showTimeSelect ? true : false}\n\t\t\tminDate={props.minDate}\n\t\t\tmaxDate={props.maxDate}\n\t\t\ttimeFormat={props.timeFormat || 'p'}\n\t\t\ttimeIntervals={props.timeIntervals || 15}\n\t\t\tdateFormat={props.dateFormat || 'Pp'}\n\t\t\tdropdownMode='select'\n\t\t\tfixedHeight\n\t\t/>\n\t\t<ErrorMessage name={props.name} component={FieldErrorMessage} />\n\t</>\n);\n\n/**\n * getCheckboxValue - returns check box value, after changing value with change event of html input element\n * @param field - field returned by formik\n * @param evt - html input change event, linked with checkbox input\n */\nconst getCheckboxValue = (field: any, evt: React.ChangeEvent<HTMLInputElement>) => {\n\t// if field value is empty, or null initially, assign it as empty array of strings\n\tif (!field.value) {\n\t\tfield.value = [];\n\t}\n\tconst index = field.value.indexOf(evt.target.value.toString());\n\t// if event gives `checked` = true, push target value to field value\n\tif (evt.target.checked) {\n\t\tfield.value.push(evt.target.value.toString());\n\t} else if (index !== -1) {\n\t\t// else remove target value from field value\n\t\tfield.value.splice(index, 1);\n\t}\n\t// return value\n\treturn field.value;\n};\n\nconst geDropDownOptions = (config: FieldConfig) => {\n\treturn ((config.otherOptions || {}).dropDownOptions || []);\n};\n\nconst geCheckboxOptions = (config: FieldConfig) => {\n\treturn ((config.otherOptions || {}).checkboxOptions || []);\n};\n\nconst getValue = (value?: string | number) => {\n\tif (value === undefined || value === null) {\n\t\treturn '';\n\t}\n\treturn value;\n};\n\nexport {\n\tInput,\n\tInputDatePicker\n};\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\ninterface BreadCrumbsProps {\n\ttitle: string;\n\ttext?: string;\n\tlinkText?: { name: string; link: string };\n\tdata: { name: string; link: string; }[]\n}\n\nconst Breadcrumbs: React.FC<BreadCrumbsProps> = (props) => (\n\t<div className='col-lg-6 col-md-6 col-sm-6'>\n\t\t<h2 className='text-capitalize' data-testid=\"breadcrumb-title\">\n\t\t\t{props.title}\n\t\t</h2>\n\t\t<ol className='breadcrumb text-capitalize'>\n\t\t\t{\n\t\t\t\tprops.data.map(obj => (\n\t\t\t\t\t<li key={obj.name}>\n\t\t\t\t\t\t<Link to={obj.link}>\n\t\t\t\t\t\t\t{obj.name}\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t</li>\n\t\t\t\t))\n\t\t\t}\n\t\t\t<li className='active'>\n\t\t\t\t<strong>\n\t\t\t\t\t{props.text || props.title}\n\t\t\t\t</strong>\n\t\t\t</li>\n\t\t\t&nbsp;\n\t\t\t{props.linkText && props.linkText.name &&\n\t\t\t\t<a href={props.linkText.link} target=\"blank\">({props.linkText.name})</a>\n\t\t\t}\n\t\t</ol>\n\t</div>\n)\n\nexport default Breadcrumbs;\n","import React from 'react';\nimport { RouteComponentProps, withRouter } from 'react-router-dom';\n\nimport Button from '../form/button';\nimport Breadcrumbs from './breadcrumbs';\n\ninterface Props {\n\ttitle: string;\n\ttext?: string;\n\tlinkText?: { name: string; link: string };\n\tdata: { name: string; link: string; }[];\n\tprovideBackBtn?: boolean;\n}\n\nconst Header: React.FC<Props & RouteComponentProps> = props => (\n\t<div>\n\t\t<div className='row wrapper border-bottom white-bg page-heading'>\n\t\t\t<Breadcrumbs {...props} />\n\t\t\t<div className='col-lg-6 col-md-6 col-sm-6'>\n\t\t\t\t{props.provideBackBtn &&\n\t\t\t\t\t<div className='breadcrumb-btn'>\n\t\t\t\t\t\t<Button className='back-btn width-100px' onClick={props.history.goBack} btnType='info'>\n\t\t\t\t\t\t\tBack\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</div>}\n\t\t\t\t{props.children}\n\t\t\t</div>\n\t\t</div>\n\t</div>\n);\n\nexport default withRouter(Header);\n","import React from 'react';\n\ninterface Props {\n    vehicleList: any[];\n}\n\nconst VehicleList: React.FC<Props> = (props) => {\n    const { vehicleList } = props;\n    return (\n        <div className='vehicle-list'>\n            {vehicleList.map((vehicleDetail: any, index: number) => (\n                <div className='vehicle-detail' key={index}>\n                    <h2 className='mt-0'>Vehicle - {index + 1}</h2>\n                    <div className='row'>\n                        <div className='col-xs-12 col-sm-12 col-md-12 col-lg-6'>\n                            <p>Make -  <b>{vehicleDetail.make}</b></p>\n                            <p>Model -  <b>{vehicleDetail.model}</b></p>\n                            <p>Reg No -  <b>{vehicleDetail.regNo}</b></p>\n                            <p>Vehicle Type -  <b>{vehicleDetail.vehicleType}</b></p>\n                            <p>Category -  <b>{vehicleDetail.category}</b></p>\n                            <p>CoverType -  <b>{vehicleDetail.coverType}</b></p>\n                        </div>\n                        <div className='col-xs-12 col-sm-12 col-md-12 col-lg-6'>\n                            <p>WindScreen -  <b>{vehicleDetail.windScreen}</b></p>\n                            <p>CC -  <b>{vehicleDetail.cc}</b></p>\n                            <p>Manufactured -  <b>{vehicleDetail.manufactured}</b></p>\n                            <p>Gross Weight -  <b>{vehicleDetail.weight}</b></p>\n                            <p>Sum Insured -  <b>{vehicleDetail.sumInsured}</b></p>\n                            <p>Registered Owner -  <b>{vehicleDetail.owner}</b></p>\n                        </div>\n                    </div>\n                </div>\n            ))}\n        </div>\n    )\n}\n\nexport default VehicleList;","import React, { useState } from 'react';\nimport { ErrorMessage, Formik } from 'formik';\nimport * as Yup from 'yup';\nimport Button from 'shared/components/form/button';\nimport FieldErrorMessage from 'shared/components/form/error';\nimport { Input } from 'shared/components/form/inputTypes';\nimport Spinner from 'shared/components/spinner/spinner';\nimport { errorMessages } from 'shared/constants/messages';\nimport Modal from 'shared/components/modal/modal';\nimport VehicleList from './vehicleList';\n\ninterface Props {\n    loading: boolean\n    isModalOpen: boolean;\n    closeModal: () => void;\n    vehicleList: any[];\n    submitVehicleDetail: (params: any) => void;\n    addNewVehicle: (params: any) => void;\n}\n\nconst DropDownOptions = [\n\t{ name: 'ONE', value: 'ONE' },\n\t{ name: 'TWO', value: 'TWO' },\n\t{ name: 'THREE', value: 'THREE' },\n\t{ name: 'FOUR', value: 'FOUR' },\n];\n\nconst VehicleDetailForm: React.FC<Props> = (props) => {\n    const { isModalOpen, closeModal } = props;\n    const [actionType, changeActionType] = useState('');\n    \n    const initialValues = {\n        make: '',\n        model: '',\n        regNo: '',\n        vehicleType: '',\n        category: '',\n        coverType: '',\n        windScreen: '',\n        cc: '',\n        manufactured: '',\n        weight: '',\n        sumInsured: '',\n        owner: ''\n    };\n    return (\n        <Modal\n            show={isModalOpen}\n            modalTitle='Add Vehicle'\n            handleClose={closeModal}\n            className='vehicle-detail'\n        >\n            <Formik\n                initialValues={initialValues}\n                onSubmit={(initialValues, {resetForm}) => {\n                    if (actionType === 'addNew') {\n                        props.addNewVehicle(initialValues);\n                        return resetForm();\n                    }\n\n                    props.submitVehicleDetail(initialValues)\n                    return resetForm();\n                }}\n                validationSchema={formValidation}\n            >\n                {({ handleSubmit, setFieldValue }) => (\n                    <form onSubmit={handleSubmit} className='media-form'>\n                        <fieldset className='row'>\n                            {props.loading && <div className='form-loading d-flex justify-content-center align-items--center'>\n                                <Spinner />\n                            </div>}\n                            <div className='col-xs-12 col-sm-12 col-md-12'>\n\n                                <div className='form-group col-xs-12 col-sm-6 col-md-3'>\n                                    <Input\n                                        type='text'\n                                        name='make'\n                                        placeholder='Make'\n                                        showLabels\n                                        setFieldValue={setFieldValue}\n                                        config={{ type: 'text', label: 'Make', name: 'make'}}\n                                    />\n                                    <ErrorMessage name={`mediaContent.model`} component={FieldErrorMessage} />\n                                </div>\n                                <div className='form-group col-xs-12 col-sm-6 col-md-3'>\n                                    <Input\n                                        type='text'\n                                        name='model'\n                                        placeholder='Model'\n                                        showLabels\n                                        setFieldValue={setFieldValue}\n                                        config={{ type: 'text', label: 'Model', name: 'model'}}\n                                    />\n                                    <ErrorMessage name={`mediaContent.model`} component={FieldErrorMessage} />\n                                </div>\n                                <div className='form-group col-xs-12 col-sm-6 col-md-3'>\n                                    <Input\n                                        type='text'\n                                        name='regNo'\n                                        placeholder='Reg No'\n                                        showLabels\n                                        setFieldValue={setFieldValue}\n                                        config={{ type: 'text', label: 'Reg No', name: 'regNo'}}\n                                    />\n                                    <ErrorMessage name={`mediaContent.regNo`} component={FieldErrorMessage} />\n                                </div>\n\n                                {VEHICLESELECT.map((vehicle: any, index: number) => (\n                                    <div className='form-group col-xs-12 col-sm-6 col-md-3' key={vehicle.name}>\n                                    <Input\n                                        type='dropdown'\n                                        name={vehicle.name}\n                                        placeholder={vehicle.placeHolder}\n                                        showLabels\n                                        setFieldValue={setFieldValue}\n                                        config={{ type: 'dropdown', label: vehicle.placeHolder, name: vehicle.name, otherOptions: { dropDownOptions: DropDownOptions } }}\n                                    />\n                                </div>\n                                ))}\n                                {VEHICLETEXTBOX.map((vehicle: any) => (\n                                    <div className='form-group col-xs-12 col-sm-6 col-md-3' key={vehicle.name}>\n                                        <Input\n                                            type={vehicle.type}\n                                            name={vehicle.name}\n                                            placeholder={vehicle.placeHolder}\n                                            showLabels\n                                            setFieldValue={setFieldValue}\n                                            config={{ type: vehicle.type, label: vehicle.placeHolder, name: vehicle.name }}\n                                        />\n                                        <ErrorMessage name={`mediaContent.regNo`} component={FieldErrorMessage} />\n                                    </div>\n                                ))\n                                }\n                            </div>\n\n                            <div className='col-xs-12 col-sm-12 col-md-12 mt-5'>\n                                <Button\n                                    className='ml-10'\n                                    type='submit' \n                                    disabled={props.loading} \n                                    btnType='primary'\n                                    onClick={() => changeActionType('submit')}\n                                >\n                                    Save\n                                </Button>\n                                <Button\n                                    className='ml-10'\n                                    type='submit'\n                                    disabled={props.loading}\n                                    btnType='primary'\n                                    onClick={() => changeActionType('addNew')}\n                                >\n                                    {`Save & Add more`}\n                                </Button>\n                                \n                            </div>\n                        </fieldset>\n                    </form>\n                )}\n            </Formik>\n            {props.vehicleList.length > 0 &&\n                <VehicleList\n                    vehicleList = {props.vehicleList}\n                />\n            }\n        </Modal>\n    )\n}\n\nconst formValidation = Yup.object().shape({\n    make: Yup.string().required(errorMessages.required('make')).strict(true),\n    model: Yup.string().required(errorMessages.required('model')).strict(true),\n    regNo: Yup.string().required(errorMessages.required('regNo')).strict(true),\n    vehicleType: Yup.string().required(errorMessages.required('vehicleType')).strict(true),\n    category: Yup.string().required(errorMessages.required('category')).strict(true),\n    coverType: Yup.string().required(errorMessages.required('coverType')).strict(true),\n    windScreen: Yup.string().required(errorMessages.required('windScreen')).strict(true),\n    cc: Yup.string().required(errorMessages.required('cc')).strict(true),\n    manufactured: Yup.string().required(errorMessages.required('manufactured')).strict(true),\n    weight: Yup.string().required(errorMessages.required('weight')).strict(true),\n    sumInsured: Yup.string().required(errorMessages.required('sumInsured')).strict(true),\n    owner: Yup.string().required(errorMessages.required('owner')).strict(true)\n})\n\nexport default VehicleDetailForm;\n\n\nconst VEHICLESELECT = [\n    {name: 'vehicleType', placeHolder:'Vehicle Type'},\n    {name: 'category', placeHolder:'Category'},\n    {name: 'coverType', placeHolder:'Cover Type'},\n]\n\nconst VEHICLETEXTBOX = [\n    { type: 'text', name: 'windScreen', placeHolder: 'windScreen' },\n    { type: 'text', name: 'cc', placeHolder: 'CC' },\n    { type: 'text', name: 'manufactured', placeHolder: 'Manufactured' },\n    { type: 'text', name: 'weight', placeHolder: 'Gross Weight' },\n    { type: 'text', name: 'sumInsured', placeHolder: 'Sum Insured' },\n    { type: 'text', name: 'owner', placeHolder: 'Registered Owner' },\n]","import React, { useState } from 'react';\nimport { ErrorMessage, Formik } from 'formik';\nimport * as Yup from 'yup';\nimport Button from 'shared/components/form/button';\nimport FieldErrorMessage from 'shared/components/form/error';\nimport { Input, InputDatePicker } from 'shared/components/form/inputTypes';\nimport Spinner from 'shared/components/spinner/spinner';\nimport { errorMessages } from 'shared/constants/messages';\nimport VehicleDetailForm from './vehicleDetailForm';\nimport VehicleList from './vehicleList';\n\ninterface Props {\n    loading: boolean\n    handleSubmit: (initialValues: any) => void;\n    handelReset: () => void;\n}\n\nconst DropDownOptions = [\n\t{ name: 'ONE', value: 'ONE' },\n\t{ name: 'TWO', value: 'TWO' },\n\t{ name: 'THREE', value: 'THREE' },\n\t{ name: 'FOUR', value: 'FOUR' },\n];\n\nconst QuotationForm: React.FC<Props> = (props) => {\n    const [isModalOpen, handleModalState] = useState(false);\n    const [isError, handleErrorState] = useState(false);\n    const [vehicleList, handleVehicleList]= useState([]) as any[]; \n\n    const initialValues = {\n        status : '',\n        referenceNumber: '',\n        companyName: '',\n        contactPerson: '',\n        quoteType: '',\n        policyType: '',\n        quoteDate: '',\n        acceptedDate: '',\n        proposedInceptionDate: '',\n        policyStartDate: '',\n        paymentMethod: '',\n        proposedEndDate: '',\n        brokerInformation:'',\n        brokgType: '',\n        brokerage: '',\n        SAPno: '',\n        insYear: '',\n        govLevy: '',\n        notes: '',\n    };\n\n    const addNewVehicle = (params: any) => {\n        const oldVehicleList: any[] = vehicleList;\n        oldVehicleList.push(params);\n        handleVehicleList(oldVehicleList);\n        handleModalState(false);\n        handleModalState(true);\n    }\n\n    const submitVehicleDetail = (params: any) => {\n        const oldVehicleList: any[] = vehicleList;\n        oldVehicleList.push(params);\n        handleVehicleList(oldVehicleList);\n        handleModalState(false);\n    }\n\n    return (\n        <>\n            <Formik\n                initialValues={initialValues}\n                onSubmit={(initialValues) => {\n                    if (vehicleList.length > 0) {\n                        const params: any = initialValues; \n                        params.vehicleList = vehicleList;\n                        return props.handleSubmit(params)\n                    };\n                    \n                    return handleErrorState(true);\n                }}\n                validationSchema={formValidation}\n            >\n                {({ handleSubmit, setFieldValue,errors,handleChange, values}) => (\n                    <form onSubmit={handleSubmit} className='media-form'>\n                        <fieldset className='row'>\n                            {props.loading && <div className='form-loading d-flex justify-content-center align-items--center'>\n                                <Spinner />\n                            </div>}\n\n                            <div className='form-group col-xs-12 col-sm-6 col-md-3'>\n                                <Input\n                                    type='text'\n                                    name='status'\n                                    placeholder='Quote'\n                                    showLabels\n                                    setFieldValue={setFieldValue}\n                                    config={{ type: 'text', label: 'Status', name: 'status'}}\n                                />\n                                <ErrorMessage name={`mediaContent.status`} component={FieldErrorMessage} />\n                            </div>\n\n                            <div className='form-group col-xs-12 col-sm-6 col-md-3'>\n                                <Input\n                                    type='text'\n                                    name='referenceNumber'\n                                    placeholder='Reference Number'\n                                    showLabels\n                                    setFieldValue={setFieldValue}\n                                    config={{ type: 'text', label: 'Reference Number', name: 'referenceNumber'}}\n                                />\n                                <ErrorMessage name={`mediaContent.referenceNumber`} component={FieldErrorMessage} />\n                            </div>\n\n                            <div className='form-group col-xs-12 col-sm-6 col-md-3'>\n                                <Input\n                                    type='dropdown'\n                                    name='companyName'\n                                    placeholder='Company Name'\n                                    showLabels\n                                    setFieldValue={setFieldValue}\n                                    config={{ type: 'dropdown', label: 'Company Name', name: 'companyName', otherOptions: { dropDownOptions: DropDownOptions } }}\n                                />\n                            </div>\n\n                            <div className='form-group col-xs-12 col-sm-6 col-md-3'>\n                                <Input\n                                    type='dropdown'\n                                    name='contactPerson'\n                                    placeholder='Contact Person'\n                                    showLabels\n                                    setFieldValue={setFieldValue}\n                                    config={{ type: 'dropdown', label: 'Contact Person', name: 'contactPerson', otherOptions: { dropDownOptions: DropDownOptions } }}\n                                />\n                            </div>\n\n                            <div className='form-group col-xs-12 col-sm-6 col-md-3'>\n                                <Input\n                                    type='text'\n                                    name='quoteType'\n                                    placeholder='Quote Type'\n                                    showLabels\n                                    setFieldValue={setFieldValue}\n                                    config={{ type: 'text', label: 'Quote Type', name: 'quoteType'}}\n                                />\n                                <ErrorMessage name={`mediaContent.quoteType`} component={FieldErrorMessage} />\n                            </div>\n\n                            <div className='form-group col-xs-12 col-sm-6 col-md-3'>\n                                <Input\n                                    type='text'\n                                    name='policyType'\n                                    placeholder='Policy Type'\n                                    showLabels\n                                    setFieldValue={setFieldValue}\n                                    config={{ type: 'text', label: 'Policy Type', name: 'policyType'}}\n                                />\n                                <ErrorMessage name={`mediaContent.policyType`} component={FieldErrorMessage} />\n                            </div>\n\n                            {DATEPICKERS.map((inputItem) => (\n                                <div className='form-group col-xs-12 col-sm-6 col-md-3' key={inputItem.key}>\n                                    <InputDatePicker\n                                        setFieldValue={setFieldValue}\n                                        minDate={new Date()}\n                                        label={inputItem.placeHolder}\n                                        name={inputItem.key}\n                                        dateFormat={'MM-dd-yyyy'}\n                                        onChange={(date: Date | null) => {\n                                            setFieldValue(inputItem.key, date);\n                                        }}\n                                        placeHolder={inputItem.placeHolder}\n                                    />\n                                </div>\n                            ))}\n\n                            <div className='form-group col-xs-12 col-sm-6 col-md-3'>\n                                <Input\n                                    type='dropdown'\n                                    name='paymentMethod'\n                                    placeholder='Payment Method'\n                                    showLabels\n                                    setFieldValue={setFieldValue}\n                                    config={{ type: 'dropdown', label: 'Payment Method', name: 'paymentMethod', otherOptions: { dropDownOptions: DropDownOptions } }}\n                                />\n                            </div>\n\n                            <div className='form-group col-xs-12 col-sm-6 col-md-3'>\n                                <Input\n                                    type='dropdown'\n                                    name='brokerInformation'\n                                    placeholder='Broker Information'\n                                    showLabels\n                                    setFieldValue={setFieldValue}\n                                    config={{ type: 'dropdown', label: 'Broker Information', name: 'brokerInformation', otherOptions: { dropDownOptions: DropDownOptions } }}\n                                />\n                            </div>\n\n                            <div className='form-group col-xs-12 col-sm-6 col-md-3'>\n                                <Input\n                                    type='dropdown'\n                                    name='brokgType'\n                                    placeholder='Breokg. Type'\n                                    showLabels\n                                    setFieldValue={setFieldValue}\n                                    config={{ type: 'dropdown', label: 'Brokg. Type', name: 'brokgType', otherOptions: { dropDownOptions: DropDownOptions } }}\n                                />\n                            </div>\n\n                            <div className='form-group col-xs-12 col-sm-6 col-md-3'>\n                                <Input\n                                    type='number'\n                                    name='brokerage'\n                                    placeholder='Brokerage'\n                                    showLabels\n                                    setFieldValue={setFieldValue}\n                                    config={{ type: 'number', label: 'Brokerage', name: 'brokerage'}}\n                                />\n                                <ErrorMessage name={`mediaContent.brokerage`} component={FieldErrorMessage} />\n                            </div>\n\n                            <div className='form-group col-xs-12 col-sm-6 col-md-3'>\n                                <Input\n                                    type='number'\n                                    name='SAPno'\n                                    placeholder='SAP no'\n                                    showLabels\n                                    setFieldValue={setFieldValue}\n                                    config={{ type: 'number', label: 'SAP no', name: 'SAPno'}}\n                                />\n                                <ErrorMessage name={`mediaContent.brokerage`} component={FieldErrorMessage} />\n                            </div>\n\n                            <div className='form-group col-xs-12 col-sm-6 col-md-3'>\n                                <Input\n                                    type='number'\n                                    name='insYear'\n                                    placeholder='ins. Year'\n                                    showLabels\n                                    setFieldValue={setFieldValue}\n                                    config={{ type: 'number', label: 'ins. Year', name: 'insYear'}}\n                                />\n                                <ErrorMessage name={`mediaContent.insYear`} component={FieldErrorMessage} />\n                            </div>\n                            \n                            <div className='form-group col-xs-12 col-sm-6 col-md-3'>\n                                <Input\n                                    type='number'\n                                    name='govLevy'\n                                    placeholder='Gov. Levy'\n                                    showLabels\n                                    setFieldValue={setFieldValue}\n                                    config={{ type: 'number', label: 'Gov. Levy', name: 'govLevy'}}\n                                />\n                                <ErrorMessage name={`mediaContent.brokerage`} component={FieldErrorMessage} />\n                            </div>\n\n                            <div className='form-group col-xs-12 col-sm-12 col-md-12'>\n                                <Input\n                                    type='textarea'\n                                    name={'notes'}\n                                    placeholder={'Notes'}\n                                    showLabels\n                                    setFieldValue={setFieldValue}\n                                    config={{ type: 'text', label: 'Notes', name: 'notes' }}\n                                />\n                            </div>\n                            <div className='col-xs-12 col-sm-12 col-md-12 mt-5'>\n                                <div className='col-xs-12 col-sm-12 col-md-4'>\n                                    <div className='d-flex align-items-center justify-content-space-between'>\n                                        <h2>Vehicle Detail</h2>\n                                        <Button \n                                            className=''\n                                            disabled={props.loading} \n                                            btnType='primary'\n                                            onClick={() => handleModalState(true)}\n                                        >\n                                            Add Vehicle\n                                        </Button>\n                                    </div>\n                                    {vehicleList.length === 0 && isError && <p className='error'>Please Add at least one Vehicle.</p>}\n                                   \n                                </div>\n                                {vehicleList.length > 0 &&\n                                    <VehicleList\n                                        vehicleList = {vehicleList}\n                                    />\n                                }\n                            </div>\n                            <div className='col-xs-12 col-sm-12 col-md-12 mt-5'>\n                                <Button \n                                    className=''\n                                    type='submit'\n                                    disabled={props.loading} \n                                    btnType='primary'\n                                    onClick={() => {\n                                        if (vehicleList.length === 0) {\n                                            handleErrorState(true);\n                                        };\n                                    }}\n                                >\n                                    Generate Quotation\n                                    </Button>\n                                <Button\n                                    className='ml-20'\n                                    type='button'\n                                    disabled={props.loading}\n                                    btnType='danger'\n                                    onClick={props.handelReset}\n                                >\n                                    Cancel\n                                </Button>\n                            </div>\n                        </fieldset>\n                    </form>\n                )}\n            </Formik>\n            <VehicleDetailForm\n                loading= {false}\n                isModalOpen= {isModalOpen}\n                closeModal= {() => handleModalState(false)}\n                vehicleList= {vehicleList}\n                addNewVehicle= {addNewVehicle}\n                submitVehicleDetail= {submitVehicleDetail}\n            />\n        </>\n    )\n}\n\nconst formValidation = Yup.object().shape({\n    status: Yup.string().required(errorMessages.required('status')).strict(true),\n    referenceNumber: Yup.string().required(errorMessages.required('referenceNumber')).strict(true),\n    companyName: Yup.string().required(errorMessages.required('companyName')).strict(true),\n    contactPerson: Yup.string().required(errorMessages.required('contactPerson')).strict(true),\n    quoteType: Yup.string().required(errorMessages.required('quoteType')).strict(true),\n    policyType: Yup.string().required(errorMessages.required('policyType')).strict(true),\n    quoteDate: Yup.date().required(errorMessages.required('quoteDate')).strict(true),\n    acceptedDate: Yup.date().required(errorMessages.required('acceptedDate')).strict(true),\n    proposedInceptionDate: Yup.date().required(errorMessages.required('proposedInceptionDate')).strict(true),\n    policyStartDate: Yup.date().required(errorMessages.required('policyStartDate')).strict(true),\n    paymentMethod: Yup.string().required(errorMessages.required('paymentMethod')).strict(true),\n    proposedEndDate: Yup.date().required(errorMessages.required('proposedEndDate')).strict(true),\n    brokerInformation: Yup.string().required(errorMessages.required('brokerInformation')).strict(true),\n    brokgType: Yup.string().required(errorMessages.required('brokgType')).strict(true),\n    brokerage: Yup.number().required(errorMessages.required('brokerage')).strict(true),\n    SAPno: Yup.number().required(errorMessages.required('SAPno')).strict(true),\n    insYear: Yup.number().required(errorMessages.required('insYear')).strict(true),\n    govLevy: Yup.number().required(errorMessages.required('govLevy')).strict(true),\n    notes: Yup.string().required(errorMessages.required('notes')).strict(true),\n})\n\n\nexport default QuotationForm;\n\nconst DATEPICKERS = [ \n    { key: 'quoteDate',  placeHolder: 'Quote Date' }, \n    { key: 'acceptedDate',  placeHolder: 'Accepted Date' }, \n    { key: 'proposedInceptionDate',  placeHolder: 'proposedInceptionDate' }, \n    { key: 'policyStartDate',  placeHolder: 'Policy start date' },\n    { key: 'proposedEndDate',  placeHolder: 'proposed End date' },\n]","import React from 'react';\nimport Button from 'shared/components/form/button';\nimport { PbBody, PbCell, PbHead, PbRow, PbTable, TableEmptyContainer, TableSpinner } from 'shared/components/table';\n\ninterface Props {\n    quotationDetailList: [];\n    loading: boolean;\n    changeActionType: (actinTpe: string, selectedCustomer: string) => void;\n}\n\nconst QuotationDetailList: React.FC<Props> = (props) => {\n    return (\n        <PbTable>\n\t\t\t<PbHead>\n\t\t\t\t<PbRow>\n\t\t\t\t\t<PbCell style={{ width: '25px' }} header>No.</PbCell>\n\t\t\t\t\t<PbCell header>Company Name</PbCell>\n\t\t\t\t\t<PbCell header>status</PbCell>\n\t\t\t\t\t<PbCell header>policyType</PbCell>\n\t\t\t\t\t<PbCell className='text-center' style={{ width: '200px' }} header>Actions</PbCell>\n\t\t\t\t</PbRow>\n\t\t\t</PbHead>\n\t\t\t<PbBody>\n\t\t\t\t{props.loading && <TableSpinner colSpan={5} />}\n\t\t\t\t{!props.loading && !props.quotationDetailList.length && <TableEmptyContainer colSpan={5} text={`No Quotation content found`} />}\n\t\t\t\t{!props.loading && props.quotationDetailList.length > 0 && \n                    props.quotationDetailList.map((company: any, index: number) => {\n                        return (\n                            <PbRow key={index}>\n                                <PbCell>{index + 1}</PbCell>\n                                <PbCell>{company.companyName}</PbCell>\n                                <PbCell>{company.status}</PbCell>\n                                <PbCell>{company.policyType}</PbCell>\n                    \n                                <PbCell className='text-center'>\n                                    <Button\n                                        abbr='View'\n                                        className='action-btn'\n                                        btnType='primary'\n                                        onClick={() => props.changeActionType('view', `${index}`)}\n                                    >\n                                        <i className='fa fa-eye' />\n                                    </Button>\n                                </PbCell>\n                            </PbRow>\n                        )\n                    })\n                }\n\t\t\t</PbBody>\n\t\t</PbTable>\n    )\n}\n\nexport default QuotationDetailList;","import React from 'react';\nimport VehicleList from './vehicleList';\n\ninterface Props {\n    quotationDetail: any;\n}\n\nconst quotationDetailModal: React .FC<Props> = (props) => (\n    <>\n    <div className='row'>\n        <div className='col-xs-12 col-sm-12 col-md-12 col-lg-6'>\n            <p>status -  <b>{props.quotationDetail.status}</b></p>\n            <p>reference Number -  <b>{props.quotationDetail.referenceNumber}</b></p>\n            <p>Contact Person -  <b>{props.quotationDetail.contactPerson}</b></p>\n            <p>Quote Type -  <b>{props.quotationDetail.quoteType}</b></p>\n            <p>Policy Type -  <b>{props.quotationDetail.policyType}</b></p>\n            <p>Payment Method -  <b>{props.quotationDetail.paymentMethod}</b></p>\n        </div>\n        <div className='col-xs-12 col-sm-12 col-md-12 col-lg-6'>\n            <p>Broker Information -  <b>{props.quotationDetail.brokerInformation}</b></p>\n            <p>Brokg Type -  <b>{props.quotationDetail.brokgType}</b></p>\n            <p>brokerage -  <b>{props.quotationDetail.brokerage}</b></p>\n            <p>SAP No -  <b>{props.quotationDetail.SAPno}</b></p>\n            <p>insYear -  <b>{props.quotationDetail.insYear}</b></p>\n            <p>govLevy -  <b>{props.quotationDetail.govLevy}</b></p>\n        </div>\n        <div className='col-xs-12 col-sm-12 col-md-12 col-lg-12 mt-20'>\n            <p>Quote Date -  <b>{`${props.quotationDetail.quoteDate}`}</b></p>\n            <p>Accepted Date -  <b>{`${new Date(props.quotationDetail.acceptedDate)}`}</b></p>\n            <p>Policy Start date -  <b>{`${props.quotationDetail.policyStartDate}`}</b></p>\n            <p>proposedInceptionDate -  <b>{`${new Date(props.quotationDetail.proposedInceptionDate)}`}</b></p>\n            <p>proposed End date -  <b>{`${props.quotationDetail.proposedEndDate}`}</b></p>\n        </div>\n        <div className='col-xs-12 col-sm-12 col-md-12 col-lg-12'>\n            <p> notes:</p>\n            <p>{props.quotationDetail.notes}</p>\n        </div>\n    </div> \n    \n    <h2>Vehicle Detail</h2>\n    <VehicleList\n        vehicleList={props.quotationDetail.vehicleList}\n    />\n    </>\n)\n\nexport default quotationDetailModal;","import React, { Component } from 'react';\nimport { RouteComponentProps, withRouter } from 'react-router';\n\nimport { TableTitle } from 'shared/components/table';\nimport { firstLevelBreadcrumbs } from 'shared/constants/constants';\nimport Header from 'shared/components/header/header';\nimport PolicyDetailForm from '../component/quotationForm';\nimport Button from 'shared/components/form/button';\nimport QuotationDetailList from '../component/quotationList';\nimport Modal from 'shared/components/modal/modal';\nimport QuotationDetailModal from '../component/quotationDetailModal';\n\ninterface UIState {\n    loading: boolean;\n    addQuotation: boolean;\n    quotationDetailList: any;\n    isModalOpen: boolean;\n    actionType: string;\n    selectedQuotation: string;\n}\n\nclass PolicyDetail extends Component<RouteComponentProps> {\n    state: UIState = {\n        loading: false,\n        addQuotation: false,\n        quotationDetailList: [],\n        isModalOpen: false,\n        actionType: '',\n        selectedQuotation: '',\n    }\n\n    render () {\n        const { loading, actionType, isModalOpen, addQuotation, quotationDetailList, selectedQuotation } = this.state\n        return (\n            <>\n                <Header data={firstLevelBreadcrumbs} title={`${addQuotation ? 'Generate Quotation' : 'Quotation' }`}>\n                {!addQuotation &&\n                        <div className='breadcrumb-btn'>\n                            <Button className='mr-2' btnType='primary' onClick={() => this.setState({ addQuotation: true })}>\n                                Generate Quotation\n                            </Button>\n                        </div>\n                    }\n                </Header>\n\t\t\t\t<div className='row mt-3'>\n\t\t\t\t\t<div className='col-lg-12'>\n\t\t\t\t\t\t<div className='ibox float-e-margins'>\n\t\t\t\t\t\t\t<TableTitle title={`${addQuotation ? 'Generate Quotation' : 'Quotation' }`} className='text-capitalize' />\n\t\t\t\t\t\t\t<div className='ibox-content'>\n                                {addQuotation &&\n                                    <PolicyDetailForm\n                                        loading={this.state.loading}\n                                        handleSubmit={this.handleSubmit}\n                                        handelReset={() => this.setState({ addQuotation: false })}\n                                    />\n                                }\n\n                                {!addQuotation &&\n                                    <QuotationDetailList\n                                        quotationDetailList = {quotationDetailList}\n                                        loading= {loading}\n                                        changeActionType={this.changeActionType}\n                                    />\n                                }\n                                \n                                {actionType === 'view' && isModalOpen && \n                                    <Modal\n                                        show={true}\n                                        modalTitle='Quotation Detail'\n                                        handleClose={this.handleCloseModel}\n                                    >\n                                        <QuotationDetailModal\n                                            quotationDetail={quotationDetailList[selectedQuotation]}\n                                        />\n                                    </Modal>\n                                }\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n            </>\n        )\n    }\n\n    handleSubmit= (values: any) => {\n        const quotationDetailList = this.state.quotationDetailList;\n        quotationDetailList.push(values)\n\n        this.setState({ quotationDetailList, addQuotation: false })\n    }\n\n    changeActionType = (actionType: string, selectedQuotation: string) => {\n        this.setState({ isModalOpen: true, actionType, selectedQuotation})\n    }\n\n    handleCloseModel = () => this.setState({ isModalOpen: false, actionType: ''});\n}\n\nexport default withRouter(PolicyDetail);"],"sourceRoot":""}