{"version":3,"sources":["shared/constants/constants.ts","shared/util/utility.ts","shared/components/form/button.tsx","shared/hoc/withErrorHandler.tsx","shared/components/errorBoundary/errorBoundary.tsx","shared/components/navigation/navItem.tsx","shared/services/auth.service.ts","shared/services/http.service.ts","shared/components/navigation/sidenav.tsx","store/action-types.ts","features/login/store/login.action.ts","shared/components/confirm/confirm.tsx","shared/components/navigation/topHeader.tsx","shared/hoc/layout/component/layout.component.tsx","shared/hoc/asyncComponents.tsx","App.tsx","features/login/store/login.reducer.ts","store/loadingReducer.ts","store/reducer.ts","store.ts","shared/components/notification/notification.tsx","Root.tsx","serviceWorker.ts","index.tsx","shared/components/spinner/spinner.tsx","shared/components/modal/modal.tsx","shared/constants/messages.ts"],"names":["__webpack_require__","d","__webpack_exports__","API_CONFIG","getUrl","firstLevelBreadcrumbs","pageOptions","query_string__WEBPACK_IMPORTED_MODULE_0__","query_string__WEBPACK_IMPORTED_MODULE_0___default","n","lodash_isEmpty__WEBPACK_IMPORTED_MODULE_1__","lodash_isEmpty__WEBPACK_IMPORTED_MODULE_1___default","shared_util_utility__WEBPACK_IMPORTED_MODULE_2__","name","link","baseUrl","concat","process","REACT_APP_BASE_URL","path","login","userList","addUser","deleteUser","logout","forgetPassword","resetPassword","profile","changePassword","users","awsCreds","getAllPayPalConfig","mediaList","id","replace","getChannelId","getEventId","addMedia","deleteMedia","pollList","addPoll","deletePoll","getStar","setStar","setPaypalConfigOfEvent","events","event","participant","fetchPolls","participantQuestion","url","params","arguments","length","undefined","urlString","isEmpty","queryString","stringify","ENVIRONMENT","split","createAction","ACTION","type","payload","createLoadingSelector","actions","state","loader","i","loading","api","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","classnames__WEBPACK_IMPORTED_MODULE_1__","classnames__WEBPACK_IMPORTED_MODULE_1___default","Button","props","button","a","createElement","data-testid","dataTestId","title","abbr","className","classnames","btnType","disabled","style","onClick","e","children","resInterceptor","ErrorBoundary","error","info","this","logError","args","console","log","React","Component","getPathElements","filter","str","getActiveClass","currentPathStr","actualPathStr","actualPath","currentPath","icons","building","document","withRouter","react_default","location","pathname","menu","route","renderSideNav","toggleIsOpen","Link","to","icon","KEY","setUserData","data","cipherText","CryptoJS","AES","encrypt","JSON","localStorage","setItem","toString","authService","checkLogin","authData","getAccessToken","bytes","decrypt","decryptedData","parse","enc","Utf8","token","getUserData","userData","setAuthData","getAuthData","removeAuthData","removeItem","getUserLanguage","user","language","setUserLanguage","checkSuperAdmin","isSuperAdmin","axiosInstance","axios","create","CancelToken","commonAxios","_ref","method","_ref$isAccessTokenReq","isAccessTokenRequire","_ref$contentType","contentType","headers","Content-Type","AuthService","access_token","body","Promise","resolve","reject","cancelToken","c","then","response","catch","httpService","get","otherData","Object","objectSpread","post","queryParams","put","deleteRequest","patch","SideNav","openStatus","_this","setState","defineProperty","role","navItem","isOpen","Events","key","PureComponent","connect","dispatch","getProfile","HttpService","profileResponse","Confirm","modal","show","handleClose","message","Modal","Footer","form_button","cancelBtnText","handleConfirm","submitBtnText","TopHeader","toggleModalStatus","onLogout","toggleSidebar","classList","toggle","window","innerWidth","add","confirm_confirm","onConfirmMessages","confirmLogout","loadingSelector","auth","Layout","sidenav","topHeader","CustomerDetail","lazy","all","bind","CompanyDetail","Quotation","App","layout_component","react","fallback","spinner","Switch","Route","exact","component","asyncComponents","Redirect","initialState","closeModal","reducer","action","email","loadingReducer","matches","exec","_matches","slicedToArray","requestName","requestState","appReducer","combineReducers","rootReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","Notification","open","msg","toUpperCase","substr","toast","success","toastId","Math","random","lib","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","draggable","pauseOnHover","WithErrorHandler","componentWillMount","interceptors","use","res","isError","addNotification","Error","request","responseURL","includes","status","responseData","errorMessages","keys","validationError","componentWillUnmount","eject","setTimeout","Fragment","notification","Root","es","errorBoundary","withErrorHandler","BrowserRouter","src_App","Boolean","hostname","match","rootEl","getElementById","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister","Spinner","react_bootstrap__WEBPACK_IMPORTED_MODULE_1__","_form_button__WEBPACK_IMPORTED_MODULE_2__","CustomModal","onHide","modalTitle","Header","closeButton","Title","modalTitle2","Body","required","field","select","exactLength","minLength","minLengthArray","maxLength","maxLengthArray","minValue","value","maxValue","validType","passwordMatchValidate","customPasswordMessage","confirmDelete"],"mappings":"yFAAAA,EAAAC,EAAAC,EAAA,sBAAAC,IAAAH,EAAAC,EAAAC,EAAA,sBAAAE,IAAAJ,EAAAC,EAAAC,EAAA,sBAAAG,IAAAL,EAAAC,EAAAC,EAAA,sBAAAI,IAAA,IAAAC,EAAAP,EAAA,KAAAQ,EAAAR,EAAAS,EAAAF,GAAAG,EAAAV,EAAA,KAAAW,EAAAX,EAAAS,EAAAC,GAAAE,EAAAZ,EAAA,GAKMK,EAAwB,CAC7B,CAAEQ,KAAM,OAAQC,KAAM,MAMjBX,EAAa,CAClBY,QAAO,GAAAC,OAAKC,8CAAYC,oBACxBC,KAAM,CACLC,MAAO,aACPC,SAAU,oBACVC,QAAS,uBACTC,WAAY,uBACZC,OAAQ,SACRC,eAAgB,uBAChBC,cAAe,sBACfC,QAAS,UACTC,eAAgB,kBAChBC,MAAO,QACPC,SAAU,0BACVC,mBAAoB,6BACpBC,UAAW,SAACC,GAAD,MACV,8CAA8CC,QAAQ,aAAcC,YAAaF,IAAKC,QAAQ,WAAYE,YAAWH,KACtHI,SAAU,SAACJ,GAAD,MACT,gDAAgDC,QAAQ,aAAcC,YAAaF,IAAKC,QAAQ,WAAYE,YAAWH,KACxHK,YAAa,SAACL,GAAD,MACZ,gDAAgDC,QAAQ,aAAcC,YAAaF,IAAKC,QAAQ,WAAYE,YAAWH,KACxHM,SAAU,SAACN,GAAD,MACT,+CAA+CC,QAAQ,aAAcC,YAAaF,IAAKC,QAAQ,WAAYE,YAAWH,KACvHO,QAAS,SAACP,GAAD,MACR,6CAA6CC,QAAQ,aAAcC,YAAaF,IAAKC,QAAQ,WAAYE,YAAWH,KACrHQ,WAAY,SAACR,GAAD,MACX,gDAAgDC,QAAQ,aAAcC,YAAaF,IAAKC,QAAQ,WAAYE,YAAWH,KACxHS,QAAS,SAACT,GAAD,MACR,6CAA6CC,QAAQ,aAAcC,YAAaF,IAAKC,QAAQ,WAAYE,YAAWH,KACrHU,QAAS,SAACV,GAAD,MACR,6CAA6CC,QAAQ,aAAcC,YAAaF,IAAKC,QAAQ,WAAYE,YAAWH,KACrHW,uBAAwB,SAACX,GAAD,MACvB,4DAA4DC,QAAQ,aAAcC,YAAaF,IAAKC,QAAQ,WAAYE,YAAWH,KACpIY,OAAM,aACNC,MAAO,SAACb,GAAD,MAAgB,kCAAkCC,QAAQ,aAAcC,YAAaF,IAAKC,QAAQ,WAAYE,YAAWH,KAChIc,YAAa,SAACd,GAAD,MAAgB,6DAC3BC,QAAQ,aAAcC,YAAaF,IAAKC,QAAQ,WAAYE,YAAWH,KACzEe,WAAY,SAACf,GAAD,MAAgB,+CAA+CC,QAAQ,aAAcC,YAAaF,IAAKC,QAAQ,WAAYE,YAAWH,KAClJgB,oBAAqB,SAAChB,GAAD,MAAgB,mDACnCC,QAAQ,aAAcC,YAAaF,IAAKC,QAAQ,WAAYE,YAAWH,OAIrE7B,EAAS,SAAC8C,GAAsD,IAAzCC,EAAyCC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAf,GAClDG,EAAS,GAAAvC,OAAMb,EAAWY,QAAjB,KAAAC,OAA4BkC,GAIzC,OAHIC,IAAWK,IAAQL,KACtBI,GAAS,IAAAvC,OAAQyC,IAAYC,UAAUP,KAEjCI,GAGFjD,EAAwB,CAAC,GAAI,GAAI,GAAI,KAGvBW,8CAAY0C,4QC7DzB,IAAMvB,EAAa,SAACH,GAC1B,OAAOA,EAAG2B,MAAM,KAAK,GAAGA,MAAM,MAAM,IAGxBzB,EAAe,SAACF,GAC5B,OAAOA,EAAG2B,MAAM,KAAK,IAGTC,EAAe,SAACC,GAC5B,MAAO,CACNC,KAAMD,EACNE,QAHwEZ,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAjB,OAO5Ca,EAAwB,SAACC,GAAD,OAAuB,SAACC,GAG5D,IADA,IAAIC,GAAS,EACJC,EAAI,EAAGA,EAAIH,EAAQb,OAAQgB,GAAK,EACxC,GAAIF,EAAMG,QAAQC,IAAIL,EAAQG,IAAK,CAClCD,GAAS,EACT,MAGF,OAAOA,qCC7BR,IAAAI,EAAAxE,EAAA,GAAAyE,EAAAzE,EAAAS,EAAA+D,GAAAE,EAAA1E,EAAA,GAAA2E,EAAA3E,EAAAS,EAAAiE,GA4CeE,IA7BuB,SAAAC,GACrC,IACMC,EACLL,EAAAM,EAAAC,cAAA,UACCC,cAAaJ,EAAMK,YAAc,KACjCC,MAAON,EAAMO,MAAQ,GACrBrB,KAAMc,EAAMd,KACZsB,UAAWC,IAAW,MAAD,OAAAtE,OAAe6D,EAAMU,SAAW,WAAa,kBAAmBV,EAAMQ,WAC3FG,SAAUX,EAAMP,SAAWO,EAAMW,SACjCC,MAAOZ,EAAMY,OAAS,GACtBC,QAAUb,EAAMW,UAAaX,EAAMP,QAAoB,aATjB,SAAAqB,GAAC,OAAKd,EAAMP,SAAWO,EAAMa,SAAWb,EAAMa,QAAQC,KAY3Fd,EAAMP,QACLG,EAAAM,EAAAC,cAAA,KAAGK,UAAU,2BAENR,EAAMe,SAAwBf,EAAMe,WAI/C,OACCf,EAAMO,KACLX,EAAAM,EAAAC,cAAA,QAAMG,MAAON,EAAMO,MAAQ,GAAIC,UAAU,eACvCP,GAECA,sEC9BFe,4FCkBWC,6MA1Bd3B,MAAQ,CACP4B,MAAO,oIASUA,EAAqBC,GACtCC,KAAKC,SAASH,oCAId,OAAIE,KAAK9B,MAAM4B,MACP,wDAEDE,KAAKpB,MAAMe,0CAGVO,GACRC,QAAQC,IAAIF,sDAnBmBJ,GAC/B,MAAO,CAAEA,gBALiBO,IAAMC,4GCU5BC,EAAkB,SAACrF,GACxB,OAAOA,EAAKyC,MAAM,KAAK6C,OAAO,SAAAC,GAAG,MAAY,KAARA,KAGhCC,EAAiB,SAACC,EAAwBC,GAE/C,GAAsB,MAAlBA,EACH,OAAID,IAAmBC,EACf,SAED,GAER,IAAMC,EAAaN,EAAgBK,GAC7BE,EAAcP,EAAgBI,GAEpC,OAAIE,EAAW,KAAOC,EAAY,GAC1B,SAED,IAGFC,EAAmC,CACxCnF,MAAO,QACPoF,SAAU,WACVC,SAAU,aAwBIC,cArBkB,SAAAtC,GAKhC,OACCuC,EAAArC,EAAAC,cAAA,MACCK,UAAWsB,EAAe9B,EAAMwC,SAASC,SAAUzC,EAAM0C,KAAKC,OAC9D9B,QAPqB,WACtBb,EAAM4C,gBACN5C,EAAM6C,aAAa7C,EAAM0C,KAAK1G,QAQ7BuG,EAAArC,EAAAC,cAAC2C,EAAA,EAAD,CAAMC,GAAI/C,EAAM0C,KAAKC,OACpBJ,EAAArC,EAAAC,cAAA,KAAGK,UAAS,SAAArE,OAAWgG,EAAMnC,EAAM0C,KAAKM,SACxCT,EAAArC,EAAAC,cAAA,QAAMK,UAAU,aACdR,EAAM0C,KAAK1G,iCClDXiH,EAAc,0BA8FdC,EAAc,SAACC,GACpB,IAAMC,EAAaC,IAASC,IAAIC,QAAQC,KAAK3E,UAAUsE,GAAOF,GAC9DQ,aAAaC,QAAQ,WAAYN,EAAWO,aAmD9BC,EAbK,CACnBC,WAlIkB,WAClB,QAAIJ,aAAaK,UAkIjBC,eAxHsB,WACtB,IACC,IAAMZ,EAAOM,aAAaK,SAC1B,GAAIX,EAAM,CACT,IAAMa,EAAQX,IAASC,IAAIW,QAAQd,EAAKQ,WAAYV,GAC9CiB,EAA+BV,KAAKW,MAAMH,EAAML,SAASN,IAASe,IAAIC,OAC5E,SAAOH,IAAiBA,EAAcI,QAAQJ,EAAcI,MAE5D,OAAO,EAEP,MAAOxD,GACR,OAAO,IA8GRyD,YAvGmB,WACnB,IAAMpB,EAAOM,aAAae,SAC1B,GAAIrB,EAAM,CACT,IAAMa,EAAQX,IAASC,IAAIW,QAAQd,EAAKQ,WAAYV,GAC9CiB,EAAqCV,KAAKW,MAAMH,EAAML,SAASN,IAASe,IAAIC,OAClF,OAAKH,GACG,GAIR,MAAO,IA8FRO,YApDmB,SAACtB,GACpB,IAAMC,EAAaC,IAASC,IAAIC,QAAQC,KAAK3E,UAAUsE,GAAOF,GAC9DQ,aAAaC,QAAQ,WAAYN,EAAWO,aAmD5Ce,YArCmB,WACnB,IAAMvB,EAAOM,aAAaK,SAC1B,GAAIX,EAAM,CACT,IAAMa,EAAQX,IAASC,IAAIW,QAAQd,EAAKQ,WAAYV,GAEpD,OADsBO,KAAKW,MAAMH,EAAML,SAASN,IAASe,IAAIC,SAkC9DM,eAVsB,WACtBlB,aAAamB,WAAW,aAUxB1B,YAAaA,EACb2B,gBA3FuB,WACvB,IAAM1B,EAAOM,aAAae,SAE1B,IAAKrB,EACJ,MAAO,KAER,IAAMa,EAAQX,IAASC,IAAIW,QAAQd,EAAKQ,WAAYV,GAC9CiB,EAAqCV,KAAKW,MAAMH,EAAML,SAASN,IAASe,IAAIC,OAElF,OAAKH,IAGGA,EAAcY,MAAQ,IAAIC,UAF1B,MAkFRC,gBA1EuB,SAACD,GACxB,IAAM5B,EAAOM,aAAae,SAC1B,GAAKrB,EAAL,CAGA,IAAMa,EAAQX,IAASC,IAAIW,QAAQd,EAAKQ,WAAYV,GAC9CiB,EAAqCV,KAAKW,MAAMH,EAAML,SAASN,IAASe,IAAIC,OAC7EH,IAGLA,EAAcY,KAAKC,SAAWA,EAC9B7B,EAAYgB,MAgEZe,gBA5BuB,WACvB,IAAM9B,EAAOM,aAAaK,SAC1B,GAAIX,EAAM,CACT,IAAMa,EAAQX,IAASC,IAAIW,QAAQd,EAAKQ,WAAYV,GAEpD,OADsBO,KAAKW,MAAMH,EAAML,SAASN,IAASe,IAAIC,OACrBa,aAExC,OAAO,oCCzHHC,EAAgBC,IAAMC,SACtBC,EAAcF,IAAME,YAgEpBC,EAAc,SAAAC,GAMa,IALhCC,EAKgCD,EALhCC,OACApH,EAIgCmH,EAJhCnH,IACA8E,EAGgCqC,EAHhCrC,KAGgCuC,EAAAF,EAFhCG,4BAEgC,IAAAD,KAAAE,EAAAJ,EADhCK,mBACgC,IAAAD,EADlB,mBACkBA,EAC1BE,EAAe,CACpBC,eAAgBF,GAEXvB,EAAQqB,GAAwBK,EAAYjC,iBAC9CO,IACHwB,EAAQG,aAAR,GAAA9J,OAA0BmI,IAI3B,IAAI4B,EAAY,KAMhB,OAJCA,EADmB,qBAAhBL,EACIrC,KAAK3E,UAAUsE,GAEfA,EAED,IAAIgD,QAAQ,SAACC,EAASC,GAC5BlB,EAAc,CACbM,OAAQA,EACRpH,IAAKA,EACLiI,YAAa,IAAIhB,EAAY,SAAkBiB,GAEjCA,IAEdT,QAASA,EACT3C,KAAM+C,IACJM,KAAK,SAACC,GACRL,EAAQK,EAAStD,KAAKA,QACpBuD,MAAM,SAAAxF,GACRmF,EAAOnF,QAiBKyF,EAZK,CACnBC,IAjFW,SAACvI,GAA8E,IAAjEC,EAAiEC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAnD,GAAIsI,EAA+CtI,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAP,GACnF,OAAOgH,EAAYuB,OAAAC,EAAA,EAAAD,CAAA,CAAErB,OAAQ,MAAOpH,IAAK9C,YAAO8C,EAAKC,IAAYuI,KAiFjEG,KA1EY,SAAC3I,GAAgG,IAAnFC,EAAmFC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAArE,GAAI0I,EAAiE1I,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAnD,GAAIsI,EAA+CtI,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAP,GACtG,OAAOgH,EAAYuB,OAAAC,EAAA,EAAAD,CAAA,CAAErB,OAAQ,OAAQpH,IAAK9C,YAAO8C,EAAK4I,GAAc9D,KAAM7E,GAAWuI,KA0ErFK,IAnEW,SAAC7I,GAA8E,IAAjEC,EAAiEC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAnD,GAAIsI,EAA+CtI,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAP,GACnF,OAAOgH,EAAYuB,OAAAC,EAAA,EAAAD,CAAA,CAAErB,OAAQ,MAAOpH,IAAK9C,YAAO8C,GAAM8E,KAAM7E,GAAWuI,KAmEvEM,cA5DqB,SAAC9I,GAA8E,IAAjEC,EAAiEC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAnD,GAAIsI,EAA+CtI,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAP,GAC7F,OAAOgH,EAAYuB,OAAAC,EAAA,EAAAD,CAAA,CAAErB,OAAQ,SAAUpH,IAAK9C,YAAO8C,GAAM8E,KAAM7E,GAAWuI,KA4D1EO,MArDa,SAAC/I,GAA8E,IAAjEC,EAAiEC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAnD,GAAIsI,EAA+CtI,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAP,GACrF,OAAOgH,EAAYuB,OAAAC,EAAA,EAAAD,CAAA,CAAErB,OAAQ,QAASpH,IAAK9C,YAAO8C,GAAM8E,KAAM7E,GAAWuI,MCzCpEQ,6MACL/H,MAAiB,CAChBgI,WAAY,MA0CbzE,aAAe,SAAC7G,GACXuL,EAAKjI,MAAMgI,WAAWtL,GACzBuL,EAAKC,SAAS,CACbF,WAAY,KAGbC,EAAKC,SAAS,CACbF,WAAWR,OAAAW,EAAA,EAAAX,CAAA,GACT9K,GAAO,8EA3CX,OACCuG,EAAArC,EAAAC,cAAA,OAAKK,UAAU,oCAAoCkH,KAAK,cACvDnF,EAAArC,EAAAC,cAAA,MAAIK,UAAU,MAAMpD,GAAG,aACtBmF,EAAArC,EAAAC,cAAA,MAAIK,UAAU,6BACb+B,EAAArC,EAAAC,cAAA,MAAIK,UAAU,mBAAd,aAGA+B,EAAArC,EAAAC,cAAA,OAAKK,UAAU,gBAAf,QAGD+B,EAAArC,EAAAC,cAACwH,EAAD,CACCC,OAAQxG,KAAK9B,MAAMgI,WAAWO,SAAU,EACxChF,aAAczB,KAAKyB,aACnBiF,IAAK,kBACLlF,cAAexB,KAAKpB,MAAM4C,cAC1BF,KAAM,CAAE1G,KAAM,kBAAmB2G,MAAO,mBAAoBK,KAAM,WAEnET,EAAArC,EAAAC,cAACwH,EAAD,CACCC,OAAQxG,KAAK9B,MAAMgI,WAAWO,SAAU,EACxChF,aAAczB,KAAKyB,aACnBiF,IAAK,iBACLlF,cAAexB,KAAKpB,MAAM4C,cAC1BF,KAAM,CAAE1G,KAAM,iBAAkB2G,MAAO,kBAAmBK,KAAM,cAEjET,EAAArC,EAAAC,cAACwH,EAAD,CACCC,OAAQxG,KAAK9B,MAAMgI,WAAWO,SAAU,EACxChF,aAAczB,KAAKyB,aACnBiF,IAAK,YACLlF,cAAexB,KAAKpB,MAAM4C,cAC1BF,KAAM,CAAE1G,KAAM,YAAa2G,MAAO,aAAcK,KAAM,uBAtCtC+E,iBA8EPC,cAnBS,SAAC1I,GACxB,OAAOA,GAGmB,SAAC2I,GAC3B,MAAO,CASNrF,cAAe,kBAAMqF,EAASjJ,YCtCP,eDuCvBkJ,WAAY,kBAAMD,EEtEZ,SAACA,GACPA,EAASjJ,YDtBqB,qBCuB9BmJ,EAAYvB,IAAItL,IAAWgB,KAAKQ,SAAS0J,KAAK,SAAC4B,GAC9CpC,EAAY9C,YAAYkF,GACxBH,EAASjJ,YDxBuB,sBCwBuBoJ,MACrD1B,MAAM,WACRuB,EAASjJ,YDzBoB,4BD6FjBgJ,CAA8E1F,YAAW+E,4BGpEzFgB,EAjB+C,SAACrI,GAC9D,OACCuC,EAAArC,EAAAC,cAACmI,EAAA,EAAD,CAAaC,KAAMvI,EAAMuI,KAAMC,YAAaxI,EAAMwI,YAAahI,UAAU,mBACxE+B,EAAArC,EAAAC,cAAA,OAAKK,UAAU,eAAeJ,cAAY,gBAAemC,EAAArC,EAAAC,cAAA,KAAGK,UAAU,uBACtE+B,EAAArC,EAAAC,cAAA,KAAGK,UAAU,kCAAkCR,EAAMyI,SACrDlG,EAAArC,EAAAC,cAACuI,EAAA,EAAMC,OAAP,CAAcnI,UAAU,uCACvB+B,EAAArC,EAAAC,cAACyI,EAAA,EAAD,CAAQpI,UAAU,cAAcE,QAAQ,SAASG,QAASb,EAAMwI,aAC9DxI,EAAM6I,eAAiB,MAEzBtG,EAAArC,EAAAC,cAACyI,EAAA,EAAD,CAAQpI,UAAU,cAAcE,QAAQ,UAAUjB,QAASO,EAAMP,QAASoB,QAASb,EAAM8I,eACvF9I,EAAM+I,eAAiB,kBCLvBC,6MACL1J,MAAiB,CAChBsI,QAAQ,KA0CTqB,kBAAoB,kBAAM1B,EAAKC,SAAS,CAAEI,QAASL,EAAKjI,MAAMsI,YAC9DsB,SAAW,kBAAM3B,EAAKvH,MAAMrD,YAC5BwM,cAAgB,kBAAM9G,SAAS6D,MAAQ7D,SAAS6D,KAAKkD,UAAUC,OAAO,mGAxCjEC,OAAOC,YAAc,KACxBlH,SAAS6D,MAAQ7D,SAAS6D,KAAKkD,UAAUI,IAAI,gDAO9C,OACCjH,EAAArC,EAAAC,cAAA,OAAKK,UAAU,qBACd+B,EAAArC,EAAAC,cAAA,OACCK,UAAU,2BACVkH,KAAK,cACLnF,EAAArC,EAAAC,cAAA,OAAKK,UAAU,iBACd+B,EAAArC,EAAAC,cAAA,UACCK,UAAU,sDACVK,QAASO,KAAK+H,eAAgB5G,EAAArC,EAAAC,cAAA,KAAGK,UAAU,kBAW7CY,KAAK9B,MAAMsI,QACXrF,EAAArC,EAAAC,cAACsJ,EAAD,CACClB,KAAMnH,KAAK9B,MAAMsI,OACjBY,YAAapH,KAAK6H,kBAClBH,cAAe1H,KAAK8H,SACpBzJ,QAAS2B,KAAKpB,MAAMP,QACpBgJ,QAASiB,IAAkBC,wBAvCTlI,IAAMC,WAiDxBkI,EAAkBxK,YAAsB,CAAC,gBAchC4I,cAbS,SAAC1I,GACxB,OAAOwH,OAAAC,EAAA,EAAAD,CAAA,GACHxH,EAAMuK,KADV,CAECpK,QAASmK,EAAgBtK,MAIA,SAAC2I,GAC3B,MAAO,CACNtL,OAAQ,kBAAMsL,EF7BR,SAACA,GACPA,EAASjJ,YDzBwB,6BGyDpBgJ,CAAsF1F,YAAW0G,IChEjGc,EAbU,SAAC9J,GACzB,OACCuC,EAAArC,EAAAC,cAAA,OAAK/C,GAAG,WACPmF,EAAArC,EAAAC,cAAC4J,EAAD,MACAxH,EAAArC,EAAAC,cAAA,OAAK/C,GAAG,eAAeoD,UAAU,WAChC+B,EAAArC,EAAAC,cAAC6J,EAAD,MACChK,EAAMe,6BCRLkJ,EAAiB3H,YAAW4H,eAAK,kBAAM/D,QAAAgE,IAAA,CAAAhP,EAAA2F,EAAA,GAAA3F,EAAA2F,EAAA,KAAA0F,KAAArL,EAAAiP,KAAA,cACvCC,GAAgB/H,YAAW4H,eAAK,kBAAM/D,QAAAgE,IAAA,CAAAhP,EAAA2F,EAAA,GAAA3F,EAAA2F,EAAA,KAAA0F,KAAArL,EAAAiP,KAAA,cACtCE,GAAYhI,YAAW4H,eAAK,kBAAM/D,QAAAgE,IAAA,CAAAhP,EAAA2F,EAAA,GAAA3F,EAAA2F,EAAA,KAAA0F,KAAArL,EAAAiP,KAAA,cC0DzBG,GAxCO,WAGrB,OADA9G,aAAaC,QAAQ,WAAY,QAEhCnB,EAAArC,EAAAC,cAACqK,EAAD,KACCjI,EAAArC,EAAAC,cAACsK,EAAA,SAAD,CAAUC,SAAUnI,EAAArC,EAAAC,cAACwK,EAAA,EAAD,OACnBpI,EAAArC,EAAAC,cAACyK,EAAA,EAAD,KACCrI,EAAArC,EAAAC,cAAC0K,EAAA,EAAD,CAAOC,OAAK,EAACxO,KAAK,mBAAmByO,UAAWC,IAChDzI,EAAArC,EAAAC,cAAC0K,EAAA,EAAD,CAAOC,OAAK,EAACxO,KAAK,kBAAkByO,UAAWC,KAC/CzI,EAAArC,EAAAC,cAAC0K,EAAA,EAAD,CAAOC,OAAK,EAACxO,KAAK,aAAayO,UAAWC,KAC1CzI,EAAArC,EAAAC,cAAC8K,EAAA,EAAD,CAAUlI,GAAG,4CC7BZmI,GAA0B,CAC/BpH,SAAU,CACT+F,KAAM7D,EAAYnC,cAEnBW,SAAUwB,EAAYzB,cACtB4G,YAAY,GA6DEC,GAzDC,WAAgE,IAA/D9L,EAA+Df,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAA5C2M,GAAcG,EAA8B9M,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC/E,OAAQ4M,EAAOnM,MACd,IPd0B,eOezB,OAAO4H,OAAAC,EAAA,EAAAD,CAAA,GACHxH,EADJ,CAECwE,SAAU,CACT+F,MAAM,GAEPrF,SAAU6G,EAAOlM,UAEnB,IPiCuB,YOhCtB,OAAO2H,OAAAC,EAAA,EAAAD,CAAA,GAAKxH,GACb,IPAiC,sBOChC,OAAOwH,OAAAC,EAAA,EAAAD,CAAA,GACHxH,EADJ,CAECwE,SAAU,CACT+F,MAAM,KAGT,IP3BiC,sBO4BhC,OAAO/C,OAAAC,EAAA,EAAAD,CAAA,GACHxH,EADJ,CAECkF,SAAU6G,EAAOlM,UAEnB,IP5BqC,0BOiCrC,IPrBoC,yBOsBnC,OAAO2H,OAAAC,EAAA,EAAAD,CAAA,GACHxH,EADJ,CAEC6L,YAAY,IAEd,IPlCoC,yBOmCnC,OAAOrE,OAAAC,EAAA,EAAAD,CAAA,GACHxH,EADJ,CAECkF,SAASsC,OAAAC,EAAA,EAAAD,CAAA,GACLxH,EAAMkF,SADF,CAEPM,KAAKgC,OAAAC,EAAA,EAAAD,CAAA,GACDxH,EAAMkF,SAASM,KADf,CAEH9I,KAAMqP,EAAOlM,QAAQnD,KACrBsP,MAAOD,EAAOlM,QAAQmM,MACtBvG,SAAUsG,EAAOlM,QAAQ4F,aAG3BoG,YAAY,IAEd,IAAK,cACJ,OAAOrE,OAAAC,EAAA,EAAAD,CAAA,GACHxH,EADJ,CAEC6L,YAAY,IAEd,QACC,OAAO7L,aC7CKiM,GApBQ,WAAqE,IAApEjM,EAAoEf,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAA9C,CAAEmB,IAAK,IAC5CR,GADmFX,UAAAC,OAAA,EAAAD,UAAA,QAAAE,GACnFS,KACFsM,EAAU,2BAA2BC,KAAKvM,GAGhD,IAAKsM,EAAS,OAAOlM,EALsE,IAAAoM,EAAA5E,OAAA6E,GAAA,EAAA7E,CAOrD0E,EAPqD,GAOlFI,EAPkFF,EAAA,GAOrEG,EAPqEH,EAAA,GAQ3F,OAAO5E,OAAAC,EAAA,EAAAD,CAAA,GACHxH,EADJ,CAKCI,IAAIoH,OAAAC,EAAA,EAAAD,CAAA,GACAxH,EAAMI,IADPoH,OAAAW,EAAA,EAAAX,CAAA,GAED8E,EAA+B,SAAjBC,OCVZC,GAAaC,aAAgB,CAClClC,KAAMtN,GACNkD,QAAS8L,KAYKS,GATK,SAAC1M,EAA0B+L,GAM9C,MTOkC,wBSZ9BA,EAAOnM,MTaoB,qBSbwBmM,EAAOnM,OAC7DuE,aAAamB,WAAW,YACxBnB,aAAamB,WAAW,YACxBtF,OAAQb,GAEFqN,GAAWxM,EAAO+L,ICXpBY,IAHe3C,OAAe4C,qCAInBC,MAMFC,GAJDC,aAAYL,GAAaC,GACtCK,aAAgBC,iBC6BFC,GAzBuB,SAACxM,GAAU,IACxCyM,EAAwBzM,EAAxByM,KAAMhE,EAAkBzI,EAAlByI,QAASvJ,EAASc,EAATd,KACvB,GAAIuN,EAAM,CAET,IAAMC,EAAG,GAAAvQ,OAAMsM,EAAQ,GAAGkE,eAAjBxQ,OAAiCsM,EAAQmE,OAAO,IAC5C,YAAT1N,EACH2N,SAAMC,QAASJ,EAAM,CAAEK,QAAO,GAAA5Q,OAAK6Q,KAAKC,YACrB,UAAT/N,GACV2N,SAAM3L,MAAOwL,EAAM,CAAEK,QAAO,GAAA5Q,OAAK6Q,KAAKC,YAGxC,OACC1K,EAAArC,EAAAC,cAAC+M,GAAA,eAAD,CACCC,SAAS,eACTC,UAAW,IACXC,iBAAe,EACfC,aAAa,EACbC,cAAY,EACZC,KAAK,EACLC,WAAS,EACTC,cAAY,KjBjBTC,8MACLrO,MAAiB,CAChBmJ,QAAS,GACTvJ,KAAM,MASP0O,mBAAqB,WACpB5M,EAAiBmE,EAAc0I,aAAapH,SAASqH,IAAI,SAACC,GACzD,GAAIA,EAAI5K,MAAQ4K,EAAI5K,KAAK6K,SAAWD,EAAI5K,KAAKsF,QAE5C,MADAlB,EAAK0G,gBAAgBF,EAAI5K,KAAKsF,QAAS,SACjC,IAAIyF,MAAMH,EAAI5K,KAAKsF,SAM1B,OALWsF,EAAI5K,MACV4K,EAAI5K,KAAKsF,SACZlB,EAAK0G,gBAAgBF,EAAI5K,KAAKsF,QAAS,WAGlCsF,GACL,SAAC7M,GACH,IAAIqH,GAAO,EAIX,GAHIrH,GAASA,EAAMiN,SAAWjN,EAAMiN,QAAQC,YAAYC,SAAS,8BAAgCnN,EAAMiN,QAAQC,YAAYC,SAAS,gBAA2C,MAAzBnN,EAAMiN,QAAQG,SACnK/F,GAAO,GAEJrH,GAASA,EAAMiN,SAAWjN,EAAMiN,QAAQC,YAAYC,SAAS,gCAA2D,MAAzBnN,EAAMiN,QAAQG,OAChH,MAAM,IAAIJ,MAAM,eAGjB,GAAIhN,EAAMuF,UAAYvF,EAAMuF,SAAStD,MAAQjC,EAAMuF,SAAS6H,QAAU/F,EAAM,CAC3E,IAAM+F,EAASpN,EAAMuF,SAAS6H,OACxBC,EAAerN,EAAMuF,SAAStD,KAEpC,GAAe,MAAXmL,GAAkBC,EAAapL,MAAmC,oBAA3BoL,EAAapL,KAAKjE,KAC5DqI,EAAKvH,MAAMrD,cACL,GAAI4R,EAAaC,eAAiB1H,OAAO2H,KAAKF,EAAaC,eAAehQ,OAAQ,CAExF,IAAMkQ,EAAkBH,EAAaC,cAAc1H,OAAO2H,KAAKF,EAAaC,eAAe,IAC3FjH,EAAK0G,gBAAgBS,EAAgB,GAAI,cAC/BxN,EAAMuF,UAAY8H,GAAgBA,EAAa9F,SAEzDlB,EAAK0G,gBAAgBM,EAAa9F,QAAS,SAE5C,MAAMvH,QAQTyN,qBAAuB,WACtBxJ,EAAc0I,aAAapH,SAASmI,MAAM5N,MAmB3CiN,gBAAkB,SAACxF,EAAiBvJ,GACnCqI,EAAKC,SAAS,CAAEiB,QAASA,EAASvJ,KAAMA,IACxC2P,WAAW,WACVtH,EAAKC,SAAS,CAAEiB,QAAS,GAAIvJ,KAAM,gFAlBpC,OACCqD,EAAArC,EAAAC,cAAAoC,EAAArC,EAAA4O,SAAA,KACCvM,EAAArC,EAAAC,cAAC4O,GAAD,CACCtC,OAAMrL,KAAK9B,MAAMmJ,QACjBvJ,KAAMkC,KAAK9B,MAAMJ,KACjBuJ,QAASrH,KAAK9B,MAAMmJ,UAEpBrH,KAAKpB,MAAMe,iBAlEeU,IAAMC,WAuFtBsG,eAAsC,KAL1B,SAACC,GAC3B,MAAO,CACNtL,OAAQ,kBAAMsL,EAASjJ,YM7EU,2BNgFpBgJ,CAAgE2F,IkBnFhEqB,GAdQ,SAAAhP,GACtB,OACCuC,EAAArC,EAAAC,cAAC8O,EAAA,EAAD,CAAU7C,MAAOA,IAChB7J,EAAArC,EAAAC,cAAC+O,EAAD,KACC3M,EAAArC,EAAAC,cAACgP,GAAD,KACC5M,EAAArC,EAAAC,cAACiP,EAAA,EAAD,KACC7M,EAAArC,EAAAC,cAACkP,GAAQrP,QCFKsP,QACW,cAA7BhG,OAAO9G,SAAS+M,UAEe,UAA7BjG,OAAO9G,SAAS+M,UAEhBjG,OAAO9G,SAAS+M,SAASC,MACvB,2DCbN,IAGgB9N,GAHZ+N,GAASpN,SAASqN,eAAe,QAGrBhO,GAITsN,GAHNW,IAASC,OAAOrN,EAAArC,EAAAC,cAACuB,GAAD,MAAe+N,IDgI1B,kBAAmBI,WACrBA,UAAUC,cAAcC,MAAMvJ,KAAK,SAAAwJ,GACjCA,EAAaC,gDE3InB,IAAAtQ,EAAAxE,EAAA,GAAAyE,EAAAzE,EAAAS,EAAA+D,GAAAxE,EAAA,KAuBe+U,IAZe,WAC7B,OACCtQ,EAAAM,EAAAC,cAAA,OAAKK,UAAU,UAAUJ,cAAY,WACpCR,EAAAM,EAAAC,cAAA,OAAKK,UAAU,gBACdZ,EAAAM,EAAAC,cAAA,YACAP,EAAAM,EAAAC,cAAA,YACAP,EAAAM,EAAAC,cAAA,gDCjBJ,IAAAR,EAAAxE,EAAA,GAAAyE,EAAAzE,EAAAS,EAAA+D,GAAAwQ,EAAAhV,EAAA,IAAAiV,EAAAjV,EAAA,IAwCekV,IA3B2B,SAAArQ,GACzC,OACCJ,EAAAM,EAAAC,cAACgQ,EAAA,EAAD,CACC5H,KAAMvI,EAAMuI,KACZ+H,OAAQ,aACR9P,UAAS,GAAArE,OAAK6D,EAAMQ,WAAa,GAAxB,YACRR,EAAMuQ,WACN3Q,EAAAM,EAAAC,cAACgQ,EAAA,EAAMK,OAAP,CAAcC,aAAW,EAACH,OAAQtQ,EAAMwI,aACvC5I,EAAAM,EAAAC,cAACgQ,EAAA,EAAMO,MAAP,KACE1Q,EAAMuQ,WADR,OAEQvQ,EAAM2Q,cAIf/Q,EAAAM,EAAAC,cAACiQ,EAAA,EAAD,CAAQ5P,UAAU,kBAAkBK,QAASb,EAAMwI,aAClD5I,EAAAM,EAAAC,cAAA,oBAAcP,EAAAM,EAAAC,cAAA,QAAMK,UAAU,WAAhB,UAKhBZ,EAAAM,EAAAC,cAACgQ,EAAA,EAAMS,KAAP,KACE5Q,EAAMe,6CClCX5F,EAAAC,EAAAC,EAAA,sBAAAmT,IAAArT,EAAAC,EAAAC,EAAA,sBAAAqO,IAAA,IAAM8E,EAAgB,CACrBqC,SAAU,SAACC,GACV,SAAA3U,OAAU2U,EAAV,kBAEDC,OAAQ,SAACD,GACR,uBAAA3U,OAAwB2U,IAEzBE,YAAa,SAACF,EAAetS,GAC5B,SAAArC,OAAU2U,EAAV,0BAAA3U,OAAwCqC,EAAxC,iBAEDyS,UAAW,SAACH,EAAetS,GAC1B,SAAArC,OAAU2U,EAAV,yBAAA3U,OAAuCqC,EAAvC,iBAED0S,eAAgB,SAACJ,EAAetS,GAC/B,SAAArC,OAAU2U,EAAV,0BAAA3U,OAAwCqC,EAAxC,YAED2S,UAAW,SAACL,EAAetS,GAC1B,SAAArC,OAAU2U,EAAV,0BAAA3U,OAAwCqC,EAAxC,iBAED4S,eAAgB,SAACN,EAAetS,GAC/B,SAAArC,OAAU2U,EAAV,0BAAA3U,OAAwCqC,EAAxC,YAED6S,SAAU,SAACP,EAAeQ,GACzB,SAAAnV,OAAU2U,EAAV,sCAAA3U,OAAoDmV,EAApD,MAEDC,SAAU,SAACT,EAAeQ,GACzB,SAAAnV,OAAU2U,EAAV,mCAAA3U,OAAiDmV,EAAjD,MAEDE,UAAW,SAACV,EAAe5R,GAC1B,SAAA/C,OAAU2U,EAAV,qBAAA3U,OAAmC+C,EAAnC,MAEDuS,sBAAuB,WACtB,MAAO,0BAERC,sBAAuB,WACtB,MAAO,gHAIHhI,EAAoB,CACzBiI,cAAe,SAACb,GACf,0CAAA3U,OAA2C2U,EAA3C,MAEDnH,cAAe","file":"static/js/main.61580e65.chunk.js","sourcesContent":["import queryString from 'query-string';\nimport isEmpty from 'lodash/isEmpty';\nimport { QueryParameters } from '../interface';\nimport { getChannelId, getEventId } from 'shared/util/utility';\n\nconst firstLevelBreadcrumbs = [\n\t{ name: 'Home', link: '/' }\n];\n\nconst channelId = 71588578;\nconst eventId = 3;\n\nconst API_CONFIG = {\n\tbaseUrl: `${process.env.REACT_APP_BASE_URL}`,\n\tpath: {\n\t\tlogin: 'auth/login',\n\t\tuserList: 'auth/getAllAdmins',\n\t\taddUser: 'auth/createAdminUser',\n\t\tdeleteUser: 'auth/deleteAdminUser',\n\t\tlogout: 'logout',\n\t\tforgetPassword: 'auth/forgot-password',\n\t\tresetPassword: 'auth/password/reset',\n\t\tprofile: 'profile',\n\t\tchangePassword: 'change-password',\n\t\tusers: 'users',\n\t\tawsCreds: 'auth/contentUploadCreds',\n\t\tgetAllPayPalConfig: 'payment/getAllPaypalConfig',\n\t\tmediaList: (id: string) =>\n\t\t\t`media/:channelId/events/:eventId/list-media`.replace(':channelId', getChannelId(id)).replace(':eventId', getEventId(id)),\n\t\taddMedia: (id: string) =>\n\t\t\t`media/:channelId/events/:eventId/upload-media`.replace(':channelId', getChannelId(id)).replace(':eventId', getEventId(id)),\n\t\tdeleteMedia: (id: string) =>\n\t\t\t`media/:channelId/events/:eventId/delete-media`.replace(':channelId', getChannelId(id)).replace(':eventId', getEventId(id)),\n\t\tpollList: (id: string) =>\n\t\t\t`polls/:channelId/events/:eventId/fetch-polls`.replace(':channelId', getChannelId(id)).replace(':eventId', getEventId(id)),\n\t\taddPoll: (id: string) =>\n\t\t\t`polls/:channelId/events/:eventId/add-polls`.replace(':channelId', getChannelId(id)).replace(':eventId', getEventId(id)),\n\t\tdeletePoll: (id: string) =>\n\t\t\t`polls/:channelId/events/:eventId/remove-polls`.replace(':channelId', getChannelId(id)).replace(':eventId', getEventId(id)),\n\t\tgetStar: (id: string) =>\n\t\t\t`stars/:channelId/events/:eventId/get-stars`.replace(':channelId', getChannelId(id)).replace(':eventId', getEventId(id)),\n\t\tsetStar: (id: string) =>\n\t\t\t`stars/:channelId/events/:eventId/set-stars`.replace(':channelId', getChannelId(id)).replace(':eventId', getEventId(id)),\n\t\tsetPaypalConfigOfEvent: (id: string) =>\n\t\t\t`payment/:channelId/events/:eventId/setPaypalConfigOfEvent`.replace(':channelId', getChannelId(id)).replace(':eventId', getEventId(id)),\n\t\tevents: `show/shows`,\n\t\tevent: (id: string) => `show/:channelId/events/:eventId`.replace(':channelId', getChannelId(id)).replace(':eventId', getEventId(id)),\n\t\tparticipant: (id: string) => `participants/:channelId/events/:eventId/fetch-participants`\n\t\t\t.replace(':channelId', getChannelId(id)).replace(':eventId', getEventId(id)),\n\t\tfetchPolls: (id: string) => `polls/:channelId/events/:eventId/fetch-polls`.replace(':channelId', getChannelId(id)).replace(':eventId', getEventId(id)),\n\t\tparticipantQuestion: (id: string) => `polls/:channelId/events/:eventId/add/participant`\n\t\t\t.replace(':channelId', getChannelId(id)).replace(':eventId', getEventId(id)),\n\t}\n};\n\nconst getUrl = (url: string, params: QueryParameters = {}): string => {\n\tlet urlString = `${API_CONFIG.baseUrl}/${url}`;\n\tif (params && !isEmpty(params)) {\n\t\turlString += `?${queryString.stringify(params)}`;\n\t}\n\treturn urlString;\n};\n\nconst pageOptions: number[] = [15, 30, 50, 100];\n\nconst PER_PAGE: number = 15;\nconst ENVIRONMENT = process.env.ENVIRONMENT === 'production' ? 'production' : 'staging';\n\nexport {\n\tAPI_CONFIG,\n\tgetUrl,\n\tfirstLevelBreadcrumbs,\n\tpageOptions,\n\tPER_PAGE,\n\tENVIRONMENT,\n\tchannelId,\n\teventId\n};\n","import moment from 'moment';\nimport findIndex from 'lodash/findIndex';\n\nimport { Action, State } from '../interface';\n\nexport const getEventId = (id: string) => {\n\treturn id.split('_')[1].split('::')[0];\n};\n\nexport const getChannelId = (id: string) => {\n\treturn id.split('_')[0];\n};\n\nexport const createAction = (ACTION: string, data: any = null): Action => {\n\treturn {\n\t\ttype: ACTION,\n\t\tpayload: data\n\t};\n};\n\nexport const createLoadingSelector = (actions: string[]) => (state: State) => {\n\t// returns true only when all actions is not loading\n\tlet loader = false;\n\tfor (let i = 0; i < actions.length; i += 1) {\n\t\tif (state.loading.api[actions[i]]) {\n\t\t\tloader = true;\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn loader;\n};\n\n/**\n * function which returns formatted date\n * @param date\n */\nexport const formatDate = (date: any, format?: string) => {\n\tif (!date) {\n\t\treturn '';\n\t}\n\treturn moment(date).local().format(format || 'YYYY-MM-DD HH:mm:ss');\n};\n\nexport const debounce = (func: any, wait = 400) => {\n\tlet h: NodeJS.Timeout;\n\treturn (...args: any) => {\n\t\tclearTimeout(h);\n\t\th = setTimeout(() => func(...args), wait);\n\t};\n};\n\nexport const setFileInputValue = (event: React.ChangeEvent<HTMLInputElement>,\n\tcallBack: (name: string, value: any) => void, key: string, values: any[], types: string[]) => {\n\tconst files = event.target.files;\n\tif (!files || !files[0]) { return; }\n\tconst fileList = Array.from(files);\n\tlet data: any[] = values;\n\tif (!data) { data = []; }\n\tif (fileList.length > 0 && fileList.length <= 8) {\n\t\tfor (const file of fileList) {\n\t\t\tconst validateFileIndex = types ? findIndex(types, type => file.type.startsWith(type)) : -1;\n\t\t\tif (validateFileIndex >= 0) {\n\t\t\t\tdata.push({\n\t\t\t\t\tfile: file,\n\t\t\t\t\turl: window.URL.createObjectURL(file),\n\t\t\t\t\ttype: file.type.startsWith('image') ? 'image' : 'video'\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n\tcallBack(key, data);\n};\n","import React, { MouseEventHandler, CSSProperties } from 'react';\nimport classnames from 'classnames';\n\ninterface ButtonProps {\n\tbtnType?: 'default' | 'primary' | 'warning' | 'danger' | 'info';\n\tloading?: boolean;\n\tdisabled?: boolean;\n\ttype?: 'submit' | 'button' | 'reset';\n\tclassName?: string;\n\tonClick?: MouseEventHandler<any>;\n\tabbr?: string;\n\ttitle?: string;\n\tstyle?: CSSProperties;\n\tdataTestId?: string;\n}\nconst Button: React.FC<ButtonProps> = props => {\n\tconst onClick: MouseEventHandler<any> = e => !props.loading && props.onClick && props.onClick(e);\n\tconst button = (\n\t\t<button\n\t\t\tdata-testid={props.dataTestId || null}\n\t\t\ttitle={props.abbr || ''}\n\t\t\ttype={props.type}\n\t\t\tclassName={classnames('btn', `btn-${props.btnType || 'default'}`, 'text-capitalize', props.className)}\n\t\t\tdisabled={props.loading || props.disabled}\n\t\t\tstyle={props.style || {}}\n\t\t\tonClick={!props.disabled && !props.loading ? onClick : () => { }}\n\t\t>\n\t\t\t{\n\t\t\t\tprops.loading ?\n\t\t\t\t\t<i className='fa fa-spin fa-spinner' />\n\t\t\t\t\t:\n\t\t\t\t\ttypeof props.children === 'string' ? props.children : props.children\n\t\t\t}\n\t\t</button>\n\t);\n\treturn (\n\t\tprops.abbr ? (\n\t\t\t<abbr title={props.abbr || ''} className='custom-abbr'>\n\t\t\t\t{button}\n\t\t\t</abbr>\n\t\t) : button\n\t);\n};\n\nexport default Button;\n","import React from 'react';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { connect } from 'react-redux';\nimport { axiosInstance } from 'shared/services/http.service';\nimport NotificationComponent from 'shared/components/notification/notification';\nimport { AxiosResponse, AxiosError } from 'axios';\nimport { ResponseObj, Action, State } from 'shared/interface';\nimport { createAction } from 'shared/util/utility';\nimport * as actionTypes from 'store/action-types';\n\nlet resInterceptor: number;\ninterface DispatchProps {\n\tlogout?: () => void;\n}\ninterface UIState {\n\tmessage: string;\n\ttype: string;\n}\nclass WithErrorHandler extends React.Component<any> {\n\tstate: UIState = {\n\t\tmessage: '',\n\t\ttype: ''\n\t};\n\n\t/**\n\t * add response interceptor before component gets mounted\n\t * check if response data contains isError = true, if yes, show an error message\n\t * if response gives a non-200 error code, show error from error data\n\t * if response contains a message to show, show success notification\n\t */\n\tcomponentWillMount = () => {\n\t\tresInterceptor = axiosInstance.interceptors.response.use((res: AxiosResponse<ResponseObj<any>>) => {\n\t\t\tif (res.data && res.data.isError && res.data.message) {\n\t\t\t\tthis.addNotification(res.data.message, 'error');\n\t\t\t\tthrow new Error(res.data.message);\n\t\t\t} else if (res.data) {\n\t\t\t\tif (res.data.message) {\n\t\t\t\t\tthis.addNotification(res.data.message, 'success');\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn res;\n\t\t}, (error: AxiosError) => {\n\t\t\tlet show = true;\n\t\t\tif (error && error.request && error.request.responseURL.includes('customer-phoenix-license/') && error.request.responseURL.includes('/companies/') && error.request.status === 404) {\n\t\t\t\tshow = false;\n\t\t\t}\n\t\t\tif (error && error.request && error.request.responseURL.includes('/company/confirm-validation') && error.request.status === 504) {\n\t\t\t\tthrow new Error('504 Timeout');\n\t\t\t}\n\t\t\t// check if error is having data\n\t\t\tif (error.response && error.response.data && error.response.status && show) {\n\t\t\t\tconst status = error.response.status;\n\t\t\t\tconst responseData = error.response.data;\n\t\t\t\t// is http error code is 401, and message contains **SESSION_EXPIRED**, log out of the application\n\t\t\t\tif (status === 401 && responseData.data && responseData.data.type === 'SESSION_EXPIRED') {\n\t\t\t\t\tthis.props.logout();\n\t\t\t\t} else if (responseData.errorMessages && Object.keys(responseData.errorMessages).length) {\n\t\t\t\t\t// if error response contains any validation message, fetch it from response, and add error notification\n\t\t\t\t\tconst validationError = responseData.errorMessages[Object.keys(responseData.errorMessages)[0]];\n\t\t\t\t\tthis.addNotification(validationError[0], 'error');\n\t\t\t\t} else if (error.response && responseData && responseData.message) {\n\t\t\t\t\t// if error data contains message field, add error notification\n\t\t\t\t\tthis.addNotification(responseData.message, 'error');\n\t\t\t\t}\n\t\t\t\tthrow error;\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * eject response interceptor on when component is about to unmount\n\t */\n\tcomponentWillUnmount = () => {\n\t\taxiosInstance.interceptors.response.eject(resInterceptor);\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<NotificationComponent\n\t\t\t\t\topen={this.state.message ? true : false}\n\t\t\t\t\ttype={this.state.type}\n\t\t\t\t\tmessage={this.state.message}\n\t\t\t\t/>\n\t\t\t\t{this.props.children}\n\t\t\t</>\n\t\t);\n\t}\n\n\t/**\n\t * addNotification - add notification msg, and clear after added toastr\n\t */\n\taddNotification = (message: string, type: string) => {\n\t\tthis.setState({ message: message, type: type });\n\t\tsetTimeout(() => {\n\t\t\tthis.setState({ message: '', type: '' });\n\t\t});\n\t}\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<{}, {}, Action>): DispatchProps => {\n\treturn {\n\t\tlogout: () => dispatch(createAction(actionTypes.AUTH_LOGOUT_SUCCESS))\n\t};\n};\nexport default connect<{}, DispatchProps, {}, State>(null, mapDispatchToProps)(WithErrorHandler);\n","import React from 'react';\nclass ErrorBoundary extends React.Component {\n\tstate = {\n\t\terror: null\n\t};\n\tstatic getDerivedStateFromError(error: Error | null) {\n\t\treturn { error };\n\t}\n\n\tcomponentDidMount() {\n\t\t//window.onerror = this.logError;\n\t}\n\tcomponentDidCatch(error: Error | null, info: object) {\n\t\tthis.logError(error);\n\t}\n\n\trender() {\n\t\tif (this.state.error) {\n\t\t\treturn 'Application has errors. Please check logs to fix this';\n\t\t}\n\t\treturn this.props.children;\n\t}\n\n\tlogError(args: Error | null) {\n\t\tconsole.log(args);\n\t}\n}\n\nexport default ErrorBoundary;\n","import React from 'react';\nimport { RouteComponentProps, withRouter, Link } from 'react-router-dom';\nimport { SideBarMenu } from 'features/login/interface/login.interface';\n\ninterface Props extends RouteComponentProps {\n\trenderSideNav: () => void;\n\tmenu: SideBarMenu;\n\tisOpen: boolean;\n\ttoggleIsOpen: (name: string) => void;\n}\n\nconst getPathElements = (path: string) => {\n\treturn path.split('/').filter(str => str !== '');\n};\n\nconst getActiveClass = (currentPathStr: string, actualPathStr: string): string => {\n\t// for base path, it's compulsary to have both path as `/`, in order to show `active` status\n\tif (actualPathStr === '/') {\n\t\tif (currentPathStr === actualPathStr) {\n\t\t\treturn 'active';\n\t\t}\n\t\treturn '';\n\t}\n\tconst actualPath = getPathElements(actualPathStr);\n\tconst currentPath = getPathElements(currentPathStr);\n\t// if the first level path matches for actual path, and current path, return `active`\n\tif (actualPath[0] === currentPath[0]) {\n\t\treturn 'active';\n\t}\n\treturn '';\n};\n\nconst icons: { [key: string]: string } = {\n\tusers: 'users',\n\tbuilding: 'building',\n\tdocument: 'file-text',\n};\n\nconst NavItem: React.FC<Props> = props => {\n\tconst handleNavClick = () => {\n\t\tprops.renderSideNav();\n\t\tprops.toggleIsOpen(props.menu.name);\n\t};\n\treturn (\n\t\t<li\n\t\t\tclassName={getActiveClass(props.location.pathname, props.menu.route)}\n\t\t\tonClick={handleNavClick}\n\t\t>\n\t\t\t{/* eslint-disable-next-line */}\n\t\t\t<Link to={props.menu.route}>\n\t\t\t\t<i className={`fa fa-${icons[props.menu.icon]}`} />\n\t\t\t\t<span className='nav-label'>\n\t\t\t\t\t{props.menu.name}\n\t\t\t\t</span>\n\t\t\t</Link>\n\t\t</li>\n\t);\n};\n\nexport default withRouter(NavItem);\n","import CryptoJS from 'crypto-js';\nimport { LoginResponse, UserProfileResponse } from 'features/login/interface/login.interface';\nconst KEY: string = 'adsfghjkla2312safaaszAS';\n\n/**\n * function to check if user is logged in or not\n */\nconst checkLogin = (): boolean => {\n\tif (localStorage.authData) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n};\n\n/**\n * function to get user access token\n */\nconst getAccessToken = (): boolean | string => {\n\ttry {\n\t\tconst data = localStorage.authData;\n\t\tif (data) {\n\t\t\tconst bytes = CryptoJS.AES.decrypt(data.toString(), KEY);\n\t\t\tconst decryptedData: LoginResponse = JSON.parse(bytes.toString(CryptoJS.enc.Utf8));\n\t\t\treturn decryptedData && decryptedData.token ? decryptedData.token : false;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t} catch (e) {\n\t\treturn false;\n\t}\n};\n\n/**\n * function to get user data\n */\nconst getUserData = (): UserProfileResponse => {\n\tconst data = localStorage.userData;\n\tif (data) {\n\t\tconst bytes = CryptoJS.AES.decrypt(data.toString(), KEY);\n\t\tconst decryptedData: UserProfileResponse = JSON.parse(bytes.toString(CryptoJS.enc.Utf8));\n\t\tif (!decryptedData) {\n\t\t\treturn {} as UserProfileResponse;\n\t\t}\n\t\treturn decryptedData;\n\t} else {\n\t\treturn {} as UserProfileResponse;\n\t}\n};\n\n/**\n * function to get user language\n */\nconst getUserLanguage = (): string => {\n\tconst data = localStorage.userData;\n\t// return german as default, if user is not logged in\n\tif (!data) {\n\t\treturn 'de';\n\t}\n\tconst bytes = CryptoJS.AES.decrypt(data.toString(), KEY);\n\tconst decryptedData: UserProfileResponse = JSON.parse(bytes.toString(CryptoJS.enc.Utf8));\n\t// return german as default, if user data not found\n\tif (!decryptedData) {\n\t\treturn 'de';\n\t}\n\treturn (decryptedData.user || {}).language || 'de';\n};\n\n/**\n * function to get user language\n */\nconst setUserLanguage = (language: string): void => {\n\tconst data = localStorage.userData;\n\tif (!data) {\n\t\treturn;\n\t}\n\tconst bytes = CryptoJS.AES.decrypt(data.toString(), KEY);\n\tconst decryptedData: UserProfileResponse = JSON.parse(bytes.toString(CryptoJS.enc.Utf8));\n\tif (!decryptedData) {\n\t\treturn;\n\t}\n\tdecryptedData.user.language = language;\n\tsetUserData(decryptedData);\n};\n\n/**\n * function to set user authentication data\n */\nconst setAuthData = (data: LoginResponse): void => {\n\tconst cipherText = CryptoJS.AES.encrypt(JSON.stringify(data), KEY);\n\tlocalStorage.setItem('authData', cipherText.toString());\n};\n\n/**\n * function to set user authentication data\n */\nconst setUserData = (data: UserProfileResponse): void => {\n\tconst cipherText = CryptoJS.AES.encrypt(JSON.stringify(data), KEY);\n\tlocalStorage.setItem('userData', cipherText.toString());\n};\n\n/**\n * function to get user authentication data\n */\nconst getAuthData = (): LoginResponse | undefined => {\n\tconst data = localStorage.authData;\n\tif (data) {\n\t\tconst bytes = CryptoJS.AES.decrypt(data.toString(), KEY);\n\t\tconst decryptedData = JSON.parse(bytes.toString(CryptoJS.enc.Utf8));\n\t\treturn decryptedData;\n\t} else {\n\t\treturn;\n\t}\n};\n\n/**\n * function to get super admin flag\n */\nconst checkSuperAdmin = (): boolean => {\n\tconst data = localStorage.authData;\n\tif (data) {\n\t\tconst bytes = CryptoJS.AES.decrypt(data.toString(), KEY);\n\t\tconst decryptedData = JSON.parse(bytes.toString(CryptoJS.enc.Utf8));\n\t\treturn (decryptedData as LoginResponse).isSuperAdmin;\n\t} else {\n\t\treturn false;\n\t}\n};\n\n/**\n * function to remove user authentication data\n */\nconst removeAuthData = (): void => {\n\tlocalStorage.removeItem('authData');\n};\n\nconst authService = {\n\tcheckLogin: checkLogin,\n\tgetAccessToken: getAccessToken,\n\tgetUserData: getUserData,\n\tsetAuthData: setAuthData,\n\tgetAuthData: getAuthData,\n\tremoveAuthData: removeAuthData,\n\tsetUserData: setUserData,\n\tgetUserLanguage: getUserLanguage,\n\tsetUserLanguage: setUserLanguage,\n\tcheckSuperAdmin: checkSuperAdmin\n};\n\nexport default authService;\n","import axios, { AxiosResponse } from 'axios';\nimport { ResponseObj } from '../interface';\nimport AuthService from './auth.service';\nimport { getUrl } from 'shared/constants/constants';\nconst axiosInstance = axios.create();\nconst CancelToken = axios.CancelToken;\nlet cancel_req: any;\n\nexport {\n\tcancel_req\n};\n\nexport interface AxiosParams {\n\tmethod: string;\n\turl: string;\n\tdata?: any;\n\tisAccessTokenRequire?: boolean;\n\tcontentType?: string;\n}\n\nexport interface MiscellaneousRequestParams {\n\tisAccessTokenRequire?: boolean;\n\tcontentType?: string;\n}\n\n/**\n * get method\n * @param request object containing axios params\n */\nconst get = (url: string, params: any = {}, otherData: MiscellaneousRequestParams = {}) => {\n\treturn commonAxios({ method: 'GET', url: getUrl(url, params), ...otherData });\n};\n\n/**\n * post method\n * @param request object containing axios params\n */\nconst post = (url: string, params: any = {}, queryParams = {}, otherData: MiscellaneousRequestParams = {}) => {\n\treturn commonAxios({ method: 'POST', url: getUrl(url, queryParams), data: params, ...otherData });\n};\n\n/**\n * put method\n * @param request object containing axios params\n */\nconst put = (url: string, params: any = {}, otherData: MiscellaneousRequestParams = {}) => {\n\treturn commonAxios({ method: 'PUT', url: getUrl(url), data: params, ...otherData });\n};\n\n/**\n * deleteRequest method\n * @param request object containing axios params\n */\nconst deleteRequest = (url: string, params: any = {}, otherData: MiscellaneousRequestParams = {}) => {\n\treturn commonAxios({ method: 'DELETE', url: getUrl(url), data: params, ...otherData });\n};\n\n/**\n * patch method\n * @param request object containing axios params\n */\nconst patch = (url: string, params: any = {}, otherData: MiscellaneousRequestParams = {}) => {\n\treturn commonAxios({ method: 'PATCH', url: getUrl(url), data: params, ...otherData });\n};\n\n/**\n * commonAxios\n * @param object containing method, url, data, access token, content-type\n */\nconst commonAxios = ({\n\tmethod,\n\turl,\n\tdata,\n\tisAccessTokenRequire = true,\n\tcontentType = 'application/json',\n}: AxiosParams): Promise<any> => {\n\tconst headers: any = {\n\t\t'Content-Type': contentType\n\t};\n\tconst token = isAccessTokenRequire && AuthService.getAccessToken();\n\tif (token) {\n\t\theaders.access_token = `${token}`;\n\t} else {\n\t\t// headers['x-request-language'] = localStorage.getItem('lang');\n\t}\n\tlet body: any = null;\n\tif (contentType === 'application/json') {\n\t\tbody = JSON.stringify(data);\n\t} else {\n\t\tbody = data;\n\t}\n\treturn new Promise((resolve, reject) => {\n\t\taxiosInstance({\n\t\t\tmethod: method,\n\t\t\turl: url,\n\t\t\tcancelToken: new CancelToken(function executor(c) {\n\t\t\t\t// An executor function receives a cancel function as a parameter\n\t\t\t\tcancel_req = c;\n\t\t\t}),\n\t\t\theaders: headers,\n\t\t\tdata: body\n\t\t}).then((response: AxiosResponse<ResponseObj<any>>) => {\n\t\t\tresolve(response.data.data);\n\t\t}).catch(error => {\n\t\t\treject(error);\n\t\t});\n\t});\n};\n\nconst httpService = {\n\tget: get,\n\tpost: post,\n\tput: put,\n\tdeleteRequest: deleteRequest,\n\tpatch: patch\n};\n\nexport {\n\taxiosInstance\n};\n\nexport default httpService;\n","import React, { PureComponent } from 'react';\nimport { connect } from 'react-redux';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { RouteComponentProps, withRouter } from 'react-router-dom';\nimport NavItem from './navItem';\nimport { State, Action } from 'shared/interface';\nimport { createAction } from 'shared/util/utility';\nimport * as actionTypes from 'store/action-types';\nimport * as ProfileActions from 'features/login/store/login.action';\n\ninterface DispatchProps {\n\trenderSideNav: () => void;\n\tgetProfile: () => void;\n}\ninterface UIState {\n\topenStatus: {\n\t\t[key: string]: boolean;\n\t};\n}\ninterface OwnProps extends RouteComponentProps, State, DispatchProps { }\n\nclass SideNav extends PureComponent<OwnProps> {\n\tstate: UIState = {\n\t\topenStatus: {}\n\t};\n\n\trender() {\n\t\t// if (!this.props.auth.authData.auth) {\n\t\t// \treturn <Redirect to='/login' />;\n\t\t// }\n\t\treturn (\n\t\t\t<nav className='navbar-default navbar-static-side' role='navigation'>\n\t\t\t\t<ul className='nav' id='side-menu'>\n\t\t\t\t\t<li className='nav-header cursor-pointer'>\n\t\t\t\t\t\t<h3 className='profile-element'>\n\t\t\t\t\t\t\tCMS Admin\n\t\t\t\t\t\t</h3>\n\t\t\t\t\t\t<div className='logo-element'>CMS</div>\n\t\t\t\t\t</li>\n\n\t\t\t\t\t<NavItem\n\t\t\t\t\t\tisOpen={this.state.openStatus.Events || false}\n\t\t\t\t\t\ttoggleIsOpen={this.toggleIsOpen}\n\t\t\t\t\t\tkey={'Customer-detail'}\n\t\t\t\t\t\trenderSideNav={this.props.renderSideNav}\n\t\t\t\t\t\tmenu={{ name: 'Customer Detail', route: '/customer-detail', icon: 'users' }}\n\t\t\t\t\t/>\n\t\t\t\t\t<NavItem\n\t\t\t\t\t\tisOpen={this.state.openStatus.Events || false}\n\t\t\t\t\t\ttoggleIsOpen={this.toggleIsOpen}\n\t\t\t\t\t\tkey={'Company-detail'}\n\t\t\t\t\t\trenderSideNav={this.props.renderSideNav}\n\t\t\t\t\t\tmenu={{ name: 'Company Detail', route: '/company-detail', icon: 'building' }}\n\t\t\t\t\t/>\n\t\t\t\t\t<NavItem\n\t\t\t\t\t\tisOpen={this.state.openStatus.Events || false}\n\t\t\t\t\t\ttoggleIsOpen={this.toggleIsOpen}\n\t\t\t\t\t\tkey={'Quotation'}\n\t\t\t\t\t\trenderSideNav={this.props.renderSideNav}\n\t\t\t\t\t\tmenu={{ name: 'Quotation', route: '/quotation', icon: 'document' }}\n\t\t\t\t\t/>\n\t\t\t\t</ul>\n\t\t\t</nav>\n\t\t);\n\t}\n\ttoggleIsOpen = (name: string) => {\n\t\tif (this.state.openStatus[name]) {\n\t\t\tthis.setState({\n\t\t\t\topenStatus: {}\n\t\t\t});\n\t\t} else {\n\t\t\tthis.setState({\n\t\t\t\topenStatus: {\n\t\t\t\t\t[name]: true\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n}\n\nconst mapStateToProps = (state: State): State => {\n\treturn state;\n};\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<{}, {}, Action>): DispatchProps => {\n\treturn {\n\t\t/**\n\t\t * renderSideNav - render side nav on side nav click, in order to change active tag of navigation-item\n\t\t * when navigating from one route to another, if in any case, there isn't any action dispatch\n\t\t * (in case if we have data in store, and we don't call API)\n\t\t * then, store won't change, and sidenNav won't get rerendered\n\t\t * we it's necessary to rerender sidenav, on route change, in order to update active route link\n\t\t * renderSideNav is used to dispatch NO_ACTION, which will rerender this component\n\t\t  */\n\t\trenderSideNav: () => dispatch(createAction(actionTypes.NO_ACTION)),\n\t\tgetProfile: () => dispatch(ProfileActions.getProfile())\n\t};\n};\n\nexport default connect<State, DispatchProps, {}, State>(mapStateToProps, mapDispatchToProps)(withRouter(SideNav));\n","export const AUTH_INIT = 'AUTH_INIT';\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS';\nexport const AUTH_FAIL = 'AUTH_FAIL';\n\nexport const GET_PROFILE_INIT = 'GET_PROFILE_INIT';\nexport const GET_PROFILE_SUCCESS = 'GET_PROFILE_SUCCESS';\nexport const GET_PROFILE_FAIL = 'GET_PROFILE_FAIL';\n\nexport const CHANGE_PASSWORD_INIT = 'CHANGE_PASSWORD_INIT';\nexport const CHANGE_PASSWORD_SUCCESS = 'CHANGE_PASSWORD_SUCCESS';\nexport const CHANGE_PASSWORD_FAIL = 'CHANGE_PASSWORD_FAIL';\n\nexport const UPDATE_PROFILE_INIT = 'UPDATE_PROFILE_INIT';\nexport const UPDATE_PROFILE_SUCCESS = 'UPDATE_PROFILE_SUCCESS';\nexport const UPDATE_PROFILE_FAIL = 'UPDATE_PROFILE_FAIL';\n\nexport const FORGET_PASSWORD_INIT = 'FORGET_PASSWORD_INIT';\nexport const FORGET_PASSWORD_SUCCESS = 'FORGET_PASSWORD_SUCCESS';\nexport const FORGET_PASSWORD_FAIL = 'FORGET_PASSWORD_FAIL';\n\nexport const RESET_PASSWORD_INIT = 'RESET_PASSWORD_INIT';\nexport const RESET_PASSWORD_SUCCESS = 'RESET_PASSWORD_SUCCESS';\nexport const RESET_PASSWORD_FAIL = 'RESET_PASSWORD_FAIL';\n\nexport const AUTH_LOGOUT_INIT = 'AUTH_LOGOUT_INIT';\nexport const AUTH_LOGOUT_SUCCESS = 'AUTH_LOGOUT_SUCCESS';\nexport const AUTH_LOGOUT_FAIL = 'AUTH_LOGOUT_FAIL';\n\nexport const FETCH_USERS_INIT = 'FETCH_USERS_INIT';\nexport const FETCH_USERS_SUCCESS = 'FETCH_USERS_SUCCESS';\nexport const FETCH_USERS_FAIL = 'FETCH_USERS_FAIL';\n\nexport const FETCH_ARCHIVED_USERS_INIT = 'FETCH_ARCHIVED_USERS_INIT';\nexport const FETCH_ARCHIVED_USERS_SUCCESS = 'FETCH_ARCHIVED_USERS_SUCCESS';\nexport const FETCH_ARCHIVED_USERS_FAIL = 'FETCH_ARCHIVED_USERS_FAIL';\n\nexport const FETCH_USER_INIT = 'FETCH_USER_INIT';\nexport const FETCH_USER_SUCCESS = 'FETCH_USER_SUCCESS';\nexport const FETCH_USER_FAIL = 'FETCH_USER_FAIL';\n\nexport const ADD_USER_INIT = 'ADD_USER_INIT';\nexport const ADD_USER_SUCCESS = 'ADD_USER_SUCCESS';\nexport const ADD_USER_FAIL = 'ADD_USER_FAIL';\n\nexport const EDIT_USER_INIT = 'EDIT_USER_INIT';\nexport const EDIT_USER_SUCCESS = 'EDIT_USER_SUCCESS';\nexport const EDIT_USER_FAIL = 'EDIT_USER_FAIL';\n\nexport const DELETE_USER_INIT = 'DELETE_USER_INIT';\nexport const DELETE_USER_SUCCESS = 'DELETE_USER_SUCCESS';\nexport const DELETE_USER_FAIL = 'DELETE_USER_FAIL';\n\nexport const RESTORE_USER_INIT = 'RESTORE_USER_INIT';\nexport const RESTORE_USER_SUCCESS = 'RESTORE_USER_SUCCESS';\nexport const RESTORE_USER_FAIL = 'RESTORE_USER_FAIL';\n\nexport const NO_ACTION = 'NO_ACTION';\nexport const RESET_MODAL_STATUS = 'RESET_MODAL_STATUS';\nexport const RESET_MESSAGE = 'RESET_MESSAGE';\n","import { ThunkDispatch } from 'redux-thunk';\n\nimport * as actionTypes from 'store/action-types';\nimport AuthService from 'shared/services/auth.service';\nimport HttpService from 'shared/services/http.service';\nimport { API_CONFIG } from 'shared/constants/constants';\nimport { createAction } from 'shared/util/utility';\nimport { Action } from 'shared/interface';\nimport { LoginResponse, UserLoginData, UserProfileResponse, ChangePasswordParams, UpdateProfileParams } from '../interface/login.interface';\n\nconst login = (data: UserLoginData) => {\n\treturn (dispatch: ThunkDispatch<{}, {}, Action>) => {\n\t\tdispatch(createAction(actionTypes.AUTH_INIT));\n\t\tHttpService.post(API_CONFIG.path.login, data, {}, {\n\t\t\tisAccessTokenRequire: false\n\t\t}).then((response: LoginResponse) => {\n\t\t\tAuthService.setAuthData(response);\n\t\t\tdispatch(createAction(actionTypes.AUTH_SUCCESS, response));\n\t\t}).catch(() => {\n\t\t\tdispatch(createAction(actionTypes.AUTH_FAIL));\n\t\t});\n\t};\n};\n\nconst getProfile = () => {\n\treturn (dispatch: ThunkDispatch<{}, {}, Action>) => {\n\t\tdispatch(createAction(actionTypes.GET_PROFILE_INIT));\n\t\tHttpService.get(API_CONFIG.path.profile).then((profileResponse: UserProfileResponse) => {\n\t\t\tAuthService.setUserData(profileResponse);\n\t\t\tdispatch(createAction(actionTypes.GET_PROFILE_SUCCESS, profileResponse));\n\t\t}).catch(() => {\n\t\t\tdispatch(createAction(actionTypes.GET_PROFILE_FAIL));\n\t\t});\n\t};\n};\n\nconst changePassword = (passwords: ChangePasswordParams) => {\n\treturn (dispatch: ThunkDispatch<{}, {}, Action>) => {\n\t\tdispatch(createAction(actionTypes.CHANGE_PASSWORD_INIT));\n\t\tHttpService.post(API_CONFIG.path.changePassword, passwords).then(() => {\n\t\t\tdispatch(createAction(actionTypes.CHANGE_PASSWORD_SUCCESS));\n\t\t\tdispatch(createAction('RESET_MODAL'));\n\t\t}).catch(() => {\n\t\t\tdispatch(createAction(actionTypes.CHANGE_PASSWORD_FAIL));\n\t\t});\n\t};\n};\n\nconst logout = () => {\n\treturn (dispatch: ThunkDispatch<{}, {}, Action>) => {\n\t\tdispatch(createAction(actionTypes.AUTH_LOGOUT_SUCCESS));\n\t\t// HttpService.get(API_CONFIG.path.logout).then(() => {\n\t\t// }).catch(() => {\n\t\t// \tdispatch(createAction(actionTypes.AUTH_LOGOUT_FAIL));\n\t\t// });\n\t};\n};\n\nconst updateProfile = (profile: UpdateProfileParams) => {\n\treturn (dispatch: ThunkDispatch<{}, {}, Action>) => {\n\t\tdispatch(createAction(actionTypes.UPDATE_PROFILE_INIT));\n\t\tHttpService.put(API_CONFIG.path.profile, profile).then(() => {\n\t\t\tdispatch(createAction(actionTypes.UPDATE_PROFILE_SUCCESS, profile));\n\t\t\tdispatch(createAction('RESET_MODAL'));\n\t\t}).catch(() => {\n\t\t\tdispatch(createAction(actionTypes.UPDATE_PROFILE_FAIL));\n\t\t});\n\t};\n};\n\nexport {\n\tlogin,\n\tlogout,\n\tgetProfile,\n\tchangePassword,\n\tupdateProfile\n};\n\n","import React from 'react';\nimport { Modal } from 'react-bootstrap';\n\nimport CustomModal, { ModalProps } from '../modal/modal';\nimport Button from '../form/button';\n\ninterface ConfirmComponentProps {\n\tmessage: string;\n\thandleConfirm: () => void;\n\tloading?: boolean;\n\tsubmitBtnText?: string;\n\tcancelBtnText?: string;\n}\n\nconst Confirm: React.FC<ModalProps & ConfirmComponentProps> = (props) => {\n\treturn (\n\t\t<CustomModal show={props.show} handleClose={props.handleClose} className='confirm-wrapper'>\n\t\t\t<div className='confirm-icon' data-testid='confirm-icon'><i className='fa fa-exclamation' /></div>\n\t\t\t<p className='mt-3 font-20 text-align-center'>{props.message}</p>\n\t\t\t<Modal.Footer className='modal-footer-area text-align-center'>\n\t\t\t\t<Button className='width-100px' btnType='danger' onClick={props.handleClose}>\n\t\t\t\t\t{props.cancelBtnText || 'No'}\n\t\t\t\t</Button>\n\t\t\t\t<Button className='width-100px' btnType='primary' loading={props.loading} onClick={props.handleConfirm}>\n\t\t\t\t\t{props.submitBtnText || 'Yes'}\n\t\t\t\t</Button>\n\t\t\t</Modal.Footer>\n\t\t</CustomModal>\n\t)\n}\n\nexport default Confirm;\n","import React from 'react';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { connect } from 'react-redux';\nimport { withRouter, RouteComponentProps } from 'react-router-dom';\n\nimport * as LoginActions from 'features/login/store/login.action';\nimport { AuthState, State, Action, LoaderState } from 'shared/interface';\nimport Confirm from '../confirm/confirm';\nimport { onConfirmMessages } from 'shared/constants/messages';\nimport { createLoadingSelector } from 'shared/util/utility';\n\ninterface MapStateProps extends AuthState, LoaderState { }\ninterface DispatchProps {\n\tlogout: () => void;\n}\ninterface UIState {\n\tisOpen: boolean;\n}\n\nclass TopHeader extends React.Component<RouteComponentProps & MapStateProps & DispatchProps> {\n\tstate: UIState = {\n\t\tisOpen: false\n\t};\n\n\tcomponentDidMount () {\n\t\tif (window.innerWidth <= 768) {\n\t\t\tdocument.body && document.body.classList.add('mini-navbar')\n\t\t}\n\t}\n\trender() {\n\t\t// if (!this.props.authData.auth) {\n\t\t// \treturn <Redirect to='/login' />\n\t\t// }\n\t\treturn (\n\t\t\t<div className='row border-bottom'>\n\t\t\t\t<nav\n\t\t\t\t\tclassName='navbar navbar-static-top'\n\t\t\t\t\trole='navigation' >\n\t\t\t\t\t<div className='navbar-header'>\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\tclassName='navbar-minimalize minimalize-styl-2 btn btn-primary'\n\t\t\t\t\t\t\tonClick={this.toggleSidebar} ><i className='fa fa-bars' /></button>\n\t\t\t\t\t</div>\n\t\t\t\t\t{/* <ul className='nav navbar-top-links navbar-right'>\n\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t<div className='logout-btn' onClick={this.toggleModalStatus}>\n\t\t\t\t\t\t\t\t<i className='fa fa-sign-out' />\n\t\t\t\t\t\t\t\tLogout\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t</ul> */}\n\t\t\t\t</nav>\n\t\t\t\t{this.state.isOpen &&\n\t\t\t\t\t<Confirm\n\t\t\t\t\t\tshow={this.state.isOpen}\n\t\t\t\t\t\thandleClose={this.toggleModalStatus}\n\t\t\t\t\t\thandleConfirm={this.onLogout}\n\t\t\t\t\t\tloading={this.props.loading}\n\t\t\t\t\t\tmessage={onConfirmMessages.confirmLogout}\n\t\t\t\t\t/>}\n\t\t\t</div>\n\t\t)\n\t}\n\ttoggleModalStatus = () => this.setState({ isOpen: !this.state.isOpen });\n\tonLogout = () => this.props.logout();\n\ttoggleSidebar = () => document.body && document.body.classList.toggle('mini-navbar');\n}\n\nconst loadingSelector = createLoadingSelector(['AUTH_LOGOUT']);\nconst mapStateToProps = (state: State): MapStateProps => {\n\treturn {\n\t\t...state.auth,\n\t\tloading: loadingSelector(state)\n\t};\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<{}, {}, Action>): DispatchProps => {\n\treturn {\n\t\tlogout: () => dispatch(LoginActions.logout())\n\t};\n}\n\nexport default connect<MapStateProps, DispatchProps, {}, State>(mapStateToProps, mapDispatchToProps)(withRouter(TopHeader));\n","import React from 'react';\nimport Sidebar from 'shared/components/navigation/sidenav';\nimport TopHeader from 'shared/components/navigation/topHeader';\n// import Footer from 'shared/components/footer/footer';\n\nconst Layout: React.FC = (props) => {\n\treturn (\n\t\t<div id='wrapper'>\n\t\t\t<Sidebar />\n\t\t\t<div id='page-wrapper' className='gray-bg'>\n\t\t\t\t<TopHeader />\n\t\t\t\t{props.children}\n\t\t\t</div>\n\t\t\t{/* <Footer /> */}\n\t\t</div>\n\t)\n}\n\nexport default Layout;\n","import { lazy } from 'react';\nimport { withRouter } from 'react-router';\n\nconst CustomerDetail = withRouter(lazy(() => import('features/customerDetail/container/customerDetail')));\nconst CompanyDetail = withRouter(lazy(() => import('features/companyDetail/container/companyDetail')));\nconst Quotation = withRouter(lazy(() => import('features/quotation/container/quotation')));\n\nexport {\n\tCustomerDetail,\n\tCompanyDetail,\n\tQuotation\n};","import React, { Suspense } from 'react';\nimport { Route, Switch, Redirect } from 'react-router-dom';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'font-awesome/css/font-awesome.min.css';\nimport 'react-toastify/dist/ReactToastify.css';\nimport 'react-table/react-table.css';\nimport 'assets/styles/datatables.min.css';\nimport './assets/styles/index.scss';\n\nimport Layout from 'shared/hoc/layout/component/layout.component';\n// import AuthService from 'shared/services/auth.service';\nimport Spinner from 'shared/components/spinner/spinner';\n\n// import containers, for which lazy loading is not needed, as they will be rendered for all users\n// import Login from 'features/login/container/login.container';\n\n/*\n* import async components in order to lazy load the containers, which will be rendered conditionally\n* based on the permissions user is having\n*/\nimport * as asyncComponents from 'shared/hoc/asyncComponents';\n\nconst App: React.FC = () => {\n\t// const isLoggedIn = AuthService.checkLogin();\n\tlocalStorage.setItem('authData', 'true');\n\treturn (\n\t\t<Layout>\n\t\t\t<Suspense fallback={<Spinner />}>\n\t\t\t\t<Switch>\n\t\t\t\t\t<Route exact path='/customer-detail' component={asyncComponents.CustomerDetail} />\n\t\t\t\t\t<Route exact path='/company-detail' component={asyncComponents.CompanyDetail} />\n\t\t\t\t\t<Route exact path='/quotation' component={asyncComponents.Quotation} />\n\t\t\t\t\t<Redirect to='/customer-detail' />\n\t\t\t\t</Switch>\n\t\t\t</Suspense>\n\t\t</Layout>\n\t)\n\n\t// if (isLoggedIn) {\n\t// \treturn (\n\t// \t\t<Layout>\n\t// \t\t\t<Suspense fallback={<Spinner />}>\n\t// \t\t\t\t<Switch>\n\t// \t\t\t\t\t<Route exact path='/customer-detail' component={asyncComponents.CustomerDetail} />\n\t// \t\t\t\t\t<Route exact path='/company-detail' component={asyncComponents.CompanyDetail} />\n\t// \t\t\t\t\t<Route exact path='/policy-detail' component={asyncComponents.PolicyDetail} />\n\t// \t\t\t\t\t<Redirect to='/404' />\n\t// \t\t\t\t</Switch>\n\t// \t\t\t</Suspense>\n\t// \t\t</Layout>\n\t// \t);\n\t// } else {\n\t// \t// lazy loading not needed for login, forget password, reset password APIs\n\t// \treturn (\n\t// \t\t<Switch>\n\t// \t\t\t<Route path='/login' component={Login} />\n\t// \t\t\t<Redirect to='/login' />\n\t// \t\t</Switch>\n\t// \t);\n\t// }\n};\n\nexport default App;\n","import * as actionTypes from 'store/action-types';\nimport { AuthState, Action } from 'shared/interface';\nimport AuthService from 'shared/services/auth.service';\n\nconst initialState: AuthState = {\n\tauthData: {\n\t\tauth: AuthService.checkLogin()\n\t},\n\tuserData: AuthService.getUserData(),\n\tcloseModal: false\n};\n\n\nconst reducer = (state: AuthState = initialState, action: Action): AuthState => {\n\tswitch (action.type) {\n\t\tcase actionTypes.AUTH_SUCCESS:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tauthData: {\n\t\t\t\t\tauth: true\n\t\t\t\t},\n\t\t\t\tuserData: action.payload\n\t\t\t};\n\t\tcase actionTypes.NO_ACTION:\n\t\t\treturn { ...state };\n\t\tcase actionTypes.AUTH_LOGOUT_SUCCESS:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tauthData: {\n\t\t\t\t\tauth: false\n\t\t\t\t}\n\t\t\t};\n\t\tcase actionTypes.GET_PROFILE_SUCCESS:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tuserData: action.payload\n\t\t\t};\n\t\tcase actionTypes.CHANGE_PASSWORD_SUCCESS:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tcloseModal: true\n\t\t\t};\n\t\tcase actionTypes.RESET_PASSWORD_SUCCESS:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tcloseModal: true\n\t\t\t};\n\t\tcase actionTypes.UPDATE_PROFILE_SUCCESS:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tuserData: {\n\t\t\t\t\t...state.userData,\n\t\t\t\t\tuser: {\n\t\t\t\t\t\t...state.userData.user,\n\t\t\t\t\t\tname: action.payload.name,\n\t\t\t\t\t\temail: action.payload.email,\n\t\t\t\t\t\tlanguage: action.payload.language,\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tcloseModal: true\n\t\t\t};\n\t\tcase 'RESET_MODAL':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tcloseModal: false\n\t\t\t};\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\nexport default reducer;\n","import { LoadingState, Action } from 'shared/interface';\n\nconst loadingReducer = (state: LoadingState = { api: {} }, action: Action): LoadingState => {\n\tconst { type } = action;\n\tconst matches = /(.*)_(INIT|SUCCESS|FAIL)/.exec(type);\n\n\t// not a *INIT / *_SUCCESS /  *_FAIL actions, so we ignore them\n\tif (!matches) return state;\n\n\tconst [, requestName, requestState] = matches;\n\treturn {\n\t\t...state,\n\t\t// Store whether a request is happening at the moment or not\n\t\t// e.g. will be true when receiving FETCH_GAME_INIT\n\t\t//      and false when receiving FETCH_GAME_SUCCESS / FETCH_GAME_FAIL\n\t\tapi: {\n\t\t\t...state.api,\n\t\t\t[requestName]: requestState === 'INIT',\n\t\t}\n\t};\n};\n\nexport default loadingReducer;\n","import { combineReducers } from 'redux';\nimport login from 'features/login/store/login.reducer';\nimport loadingReducer from './loadingReducer';\nimport { State, Action } from 'shared/interface';\n\nimport * as actionTypes from 'store/action-types';\n\nconst appReducer = combineReducers({\n\tauth: login,\n\tloading: loadingReducer\n});\n\nconst rootReducer = (state: State | undefined, action: Action): State => {\n\tif (action.type === actionTypes.AUTH_LOGOUT_SUCCESS || action.type === actionTypes.AUTH_LOGOUT_FAIL) {\n\t\tlocalStorage.removeItem('authData');\n\t\tlocalStorage.removeItem('userData');\n\t\tstate = undefined;\n\t}\n\treturn appReducer(state, action);\n};\n\nexport default rootReducer;\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './store/reducer';\n\nlet reduxDevTools = (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__;\n\n//check if redux dev tool extension is installed by user and if yes use that\nconst composeEnhancers = process.env.NODE_ENV === 'development' && reduxDevTools ?\n\treduxDevTools : compose;\n\nconst store = createStore(rootReducer, composeEnhancers(\n\tapplyMiddleware(thunk)\n));\n\nexport default store;\n","import React from 'react'\nimport { ToastContainer, toast } from 'react-toastify';\n\ninterface Props {\n\topen: boolean;\n\tmessage: string;\n\ttype: string;\n}\n\n/**\n * Notification - this component uses **react-toastify** to show notification\n * whenever it receives a message from props, and a flag, to toggle it's state, it adds a notification to toastr\n * depending on notification type\n * @param props \n */\nconst Notification: React.FC<Props> = (props) => {\n\tconst { open, message, type } = props;\n\tif (open) {\n\t\t// make first letter of msg capital, and the rest as they are\n\t\tconst msg = `${message[0].toUpperCase()}${message.substr(1)}`\n\t\tif (type === 'success') {\n\t\t\ttoast.success((msg), { toastId: `${Math.random()}` });\n\t\t} else if (type === 'error') {\n\t\t\ttoast.error((msg), { toastId: `${Math.random()}` });\n\t\t}\n\t}\n\treturn (\n\t\t<ToastContainer\n\t\t\tposition=\"bottom-right\"\n\t\t\tautoClose={4000}\n\t\t\thideProgressBar\n\t\t\tnewestOnTop={false}\n\t\t\tcloseOnClick\n\t\t\trtl={false}\n\t\t\tdraggable\n\t\t\tpauseOnHover\n\t\t/>\n\t)\n}\n\nexport default Notification;\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport ErrorBoundary from './shared/components/errorBoundary/errorBoundary';\nimport App from './App';\nimport store from './store';\nimport WithErrorHandler from 'shared/hoc/withErrorHandler';\n\nconst Root: React.FC = props => {\n\treturn (\n\t\t<Provider store={store}>\n\t\t\t<ErrorBoundary>\n\t\t\t\t<WithErrorHandler>\n\t\t\t\t\t<BrowserRouter>\n\t\t\t\t\t\t<App {...props} />\n\t\t\t\t\t</BrowserRouter>\n\t\t\t\t</WithErrorHandler>\n\t\t\t</ErrorBoundary>\n\t\t</Provider>\n\t);\n};\n\nexport default Root;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Root from './Root';\nimport * as serviceWorker from './serviceWorker';\n\nlet rootEl = document.getElementById('root');\n\n// Create a reusable render method that we can call more than once\nconst render = (Component: React.FC) => {\n\tReactDOM.render(<Component />, rootEl);\n};\n\nrender(Root);\n\nserviceWorker.unregister();\n","import React from 'react';\nimport './spinner.css';\n\nconst Loader: React.FC<{ className?: string }> = (props) => {\n\treturn (\n\t\t<div className={[props.className || '', 'spinner-wrapper'].join(' ')}>\n\t\t\t<div className='loading-icon fa fa-spin fa-spinner' />\n\t\t</div>\n\t);\n}\n\nconst Spinner: React.FC<{}> = () => {\n\treturn (\n\t\t<div className='spinner' data-testid='spinner'>\n\t\t\t<div className='lds-facebook'>\n\t\t\t\t<div />\n\t\t\t\t<div />\n\t\t\t\t<div />\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default Spinner;\nexport {\n\tLoader\n}\n","import React from 'react';\nimport { Modal } from 'react-bootstrap';\nimport Button from '../form/button';\n\nexport interface ModalProps {\n\tshow: boolean;\n\thandleClose: React.ReactEventHandler<{}>;\n\tclassName?: string;\n\tmodalTitle?: string;\n\tmodalTitle2?: string;\n\tdataTestId?: string;\n}\n\nconst CustomModal: React.FC<ModalProps> = props => {\n\treturn (\n\t\t<Modal\n\t\t\tshow={props.show}\n\t\t\tonHide={() => { }}\n\t\t\tclassName={`${props.className || ''} fadeIn`}>\n\t\t\t{props.modalTitle ?\n\t\t\t\t<Modal.Header closeButton onHide={props.handleClose}>\n\t\t\t\t\t<Modal.Title>\n\t\t\t\t\t\t{props.modalTitle}\n\t\t\t\t\t\t&nbsp;{props.modalTitle2}\n\t\t\t\t\t</Modal.Title>\n\t\t\t\t</Modal.Header>\n\t\t\t\t:\n\t\t\t\t<Button className='modal-close-btn' onClick={props.handleClose}>\n\t\t\t\t\t<span>×</span><span className='sr-only'>\n\t\t\t\t\t\tClose\n\t\t\t\t\t</span>\n\t\t\t\t</Button>\n\t\t\t}\n\t\t\t<Modal.Body>\n\t\t\t\t{props.children}\n\t\t\t</Modal.Body>\n\t\t</Modal>\n\t);\n};\n\nexport default CustomModal;\n","const errorMessages = {\n\trequired: (field: string) => {\n\t\treturn `${field} is required!`;\n\t},\n\tselect: (field: string) => {\n\t\treturn `please select ${field}`;\n\t},\n\texactLength: (field: string, length: number) => {\n\t\treturn `${field} must be having exact ${length} characters!`;\n\t},\n\tminLength: (field: string, length: number) => {\n\t\treturn `${field} must be longer than ${length} characters!`;\n\t},\n\tminLengthArray: (field: string, length: number) => {\n\t\treturn `${field} must contain minimum ${length} items!`;\n\t},\n\tmaxLength: (field: string, length: number) => {\n\t\treturn `${field} must be shorter than ${length} characters!`;\n\t},\n\tmaxLengthArray: (field: string, length: number) => {\n\t\treturn `${field} must contain maximum ${length} items!`;\n\t},\n\tminValue: (field: string, value: number) => {\n\t\treturn `${field} must be greater than or equal to ${value}!`;\n\t},\n\tmaxValue: (field: string, value: number) => {\n\t\treturn `${field} must be less than or equal to ${value}!`;\n\t},\n\tvalidType: (field: string, type: string) => {\n\t\treturn `${field} must be a valid ${type}!`;\n\t},\n\tpasswordMatchValidate: () => {\n\t\treturn 'Passwords do not match';\n\t},\n\tcustomPasswordMessage: () => {\n\t\treturn 'Password must contain 1 Small Character, 1 Upper character, 1 special character and min length should be 8.'\n\t}\n}\n\nconst onConfirmMessages = {\n\tconfirmDelete: (field: string) => {\n\t\treturn `Are you sure, you want to remove ${field}?`;\n\t},\n\tconfirmLogout: 'Are you sure, you want to remove logout?'\n}\n\nexport {\n\terrorMessages,\n\tonConfirmMessages\n}\n"],"sourceRoot":""}